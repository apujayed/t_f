{"version":3,"sources":["components/hooks/useCountdownTimer.js","assets/trading.jpg","components/Popup.js","assets/message.mp3","assets/starttune.mp3","components/Modal/Modal.js","components/reuseable/BidderLotComponent.js","pages/auction/Bidders.js","pages/Bidders.js"],"names":["useCountdownTimer","endTime","_useState","useState","Date","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","minutes","seconds","_useState4","remainingTime","setRemainingTime","_useState5","_useState6","currentIndex","setCurrentIndex","_useState7","_useState8","totalRemainingSeconds","setTotalRemainingSeconds","useEffect","interval","setInterval","now","timeDiff","getTime","clearInterval","Math","floor","formattedTime","concat","Popup","_ref","isOpen","onClose","_jsx","className","children","_jsxs","src","trading","width","alt","ModalBroker","props","closeOnEscapeKeyDown","e","charCode","keyCode","document","body","addEventListener","removeEventListener","_Fragment","CSSTransition","in","show","unmountOnExit","timeout","enter","exit","onClick","stopPropagation","title","scope","filteredData","map","el","index","lot","factory_name","maximum_bid","buyer_name","sold_status","BidderLotComponent","handleKeyPress","time","users","manualmode","selectedIndex","handleInputChange","addBid","handleInc","disabledButtons","setSelectedIndex","setManualmode","invoice","grade","price","pkgs","buyer","link_id","autoComplete","type","id","name","value","onKeyPress","event","onChange","disabled","FaHandPaper","includes","style","fontSize","socket","io","connect","process","Bidders","setShow","API_URL","dispatch","useDispatch","usersString","useSelector","state","auction","auction_data","localStorage","getItem","JSON","parse","amountBid","setAmountbid","setManualbidindex","checkedItemName","setCheckedItemName","_useState9","_useState10","setCheckedItemid","_useState11","_useState12","activebroker","setActivebroker","_useState13","_useState14","list","setList","_useState15","_useState16","rawlist","setrawList","_useState17","_useState18","setbuttonLoading","_useState19","_useState20","setDisabledButtons","_useState21","_useState22","_useState23","_useState24","activeUsers","setActiveUsers","_useState25","_useState26","setVisible","_useState27","_useState28","setShowPopup","_useState29","_useState30","loading","_useState31","_useState32","bidloading","setbidLoading","_useState33","_useState34","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data$","current_brokers","userToggleListener","wrap","_context","prev","next","axios","get","sent","data","Promise","all","emit","userId","on","abrupt","off","t0","console","log","stop","apply","arguments","isMounted","filter","item","handleActiveUsers","count","_useState35","secondsToAdd","_useState37","_useState38","setEndTime","_useState39","_useState40","_useState41","_useState42","_useState43","_useState44","_useState45","_useState46","sale","setSale","_useState47","_useState48","season","setSeason","_useState49","_useState50","date","setDate","fetchInitialList","_ref2","_callee2","_context2","fetchEndTime","_ref3","_callee3","_context3","fetchBrokerData","_ref4","_callee4","_context4","_useSWR","useSWR","revalidateOnFocus","revalidateOnReconnect","fetchedList","_useSWR2","error","fetchedEndTime","_useSWR3","onSuccess","_data$","sale_no","_useCountdownTimer","Number","objectToShow","prevList","openLot","_ref5","_callee5","_context5","then","catch","getAllcatalogue","_ref6","_callee6","_amountBid$index","mxbid","eligiblebid","bidValue","bidsToUpdate","_context6","alert","bid","put","_x","_x2","_ref7","_callee7","audio","updatedData","_context7","prevDisabledButtons","_toConsumableArray","Audio","music","obj","idx","_objectSpread","key","play","btnIndex","finish","_x3","_x4","height","display","flexDirection","justifyContent","alignItems","ReactLoading","color","marginTop","fontWeight","Modal","toUpperCase","short_name","length","backgroundColor","padding","paddingRight","uId","sl","formatTime","_event$target","target","prevState","updatedState","_defineProperty","history","useNavigate","token","sessionStorage","ViewList"],"mappings":"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","file":"static/js/10.6917e89b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useCountdownTimer = (endTime) => {\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [remainingTime, setRemainingTime] = useState({ minutes: 0, seconds: 0 });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [totalRemainingSeconds, setTotalRemainingSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (endTime) {\r\n      const interval = setInterval(() => {\r\n        const now = new Date();\r\n        setCurrentTime(now);\r\n\r\n        const timeDiff = endTime - now.getTime();\r\n        if (timeDiff <= 0) {\r\n          clearInterval(interval);\r\n          setRemainingTime({ minutes: 0, seconds: 0 });\r\n        } else {\r\n          const minutes = Math.floor(timeDiff / 60000);\r\n          const seconds = Math.floor((timeDiff / 1000) % 60);\r\n          setRemainingTime({ minutes, seconds });\r\n\r\n          // Calculate the current index by dividing remaining seconds by 120\r\n          const currentIndex = Math.floor(timeDiff / 120000);\r\n          setCurrentIndex(currentIndex);\r\n\r\n          // Set total remaining seconds rounded down to the nearest whole number\r\n          setTotalRemainingSeconds(Math.floor(timeDiff / 1000));\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [endTime]);\r\n\r\n  const formattedTime = `${remainingTime.minutes}:${remainingTime.seconds < 10 ? '0' : ''}${remainingTime.seconds}`;\r\n\r\n  return { currentTime, remainingTime, formattedTime, currentIndex, totalRemainingSeconds };\r\n};\r\n\r\nexport default useCountdownTimer;\r\n","export default __webpack_public_path__ + \"static/media/trading.c31da198.jpg\";","import React from 'react';\r\nimport './Popup.css';\r\nimport trading from '../assets/trading.jpg'\r\nfunction Popup({ isOpen, onClose }) {\r\n\r\n\r\n  return (\r\n  <div className=\"trading container d-flex justify-content-center align-items-center \">\r\n  <div className=\"text-center\">\r\n    <img src={trading} width=\"50%\" alt=\"Image\" className=\"img-fluid\" />\r\n    <h2 className=\"mt-3\">Trading has not yet started!!</h2>\r\n    <p className=\"lead\">Please be advised that trading has not yet begun for the day. If you are attempting to place a trade, please wait until trading commences before doing so. Thank you for your patience and understanding.</p>\r\n    {/* <button className=\"btn btn-primary\">Learn More</button> */}\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","export default __webpack_public_path__ + \"static/media/message.17f316c9.mp3\";","export default __webpack_public_path__ + \"static/media/starttune.99619dc2.mp3\";","import React, { useEffect } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.css\";\r\n\r\n\r\nconst ModalBroker = (props) => {\r\n\r\n  // console.log(props);\r\n  const closeOnEscapeKeyDown = e => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\nreturn(\r\n    <>\r\n    <CSSTransition\r\n      in={props.show}\r\n      unmountOnExit\r\n      timeout={{ enter: 0, exit: 300 }}\r\n    >\r\n      <div className=\"modal\" onClick={props.onClose}>\r\n        <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\">{props.title}</h4>\r\n\r\n           \r\n          </div>\r\n          <div className=\"modal-body\">\r\n\r\n\r\n          <table className=\"modaltable table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Lot</th>\r\n              <th scope=\"col\">Factory</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Bidder</th>\r\n              <th scope=\"col\">Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.filteredData.map((el, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td ><h4>{index + 1}</h4></td>\r\n                  <td><h4>{el.lot}</h4></td>\r\n                  <td><h4>{el.factory_name}</h4></td>\r\n                  <td><h4>{el.maximum_bid}</h4></td>\r\n                  <td><h4>{el.buyer_name}</h4></td>\r\n                  <td>\r\n                    <span className={el.sold_status === 1 ? \"hname\" : el.sold_status === 0 ? \"rname\" : \"rname\"}>\r\n                      {el.sold_status === 1 ? \"Sold\" :  el.sold_status === 0 ?\"Unsold\":\"Pending\"}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button onClick={props.onClose} className=\"btn btn-danger\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ModalBroker;\r\n","import React from \"react\";\r\nimport {\r\n  FaHandPaper,\r\n  FaRegWindowClose,\r\n  FaRegCheckSquare,\r\n} from \"react-icons/fa\";\r\nconst BidderLotComponent = ({\r\n  handleKeyPress,\r\n  \r\n  index,\r\n  time,\r\n  el,\r\n  users,\r\n\r\n  manualmode,\r\n  selectedIndex,\r\n  handleInputChange,\r\n  addBid,\r\n  handleInc,\r\n  disabledButtons,\r\n  setSelectedIndex,\r\n  setManualmode,\r\n}) => {\r\n\r\n  return (\r\n    <>\r\n    <tr>\r\n      <td className=\"text-center\">\r\n        {el.lot}\r\n        <br />\r\n        {el.invoice}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.factory_name}\r\n        <br/>\r\n        ({el.grade})\r\n        {/* <br />\r\n        ({el.grade}) Rating: <span style={{ color: 'purple' }}>({el.lirating_name})</span>\r\n<span style={{ color: 'navy' }}>({el.lrating_name})</span> */}\r\n      </td>\r\n      <td className=\"text-center\">\r\n        {el.price}\r\n        <br />\r\n        {`(${el.pkgs})`}\r\n      </td>\r\n      \r\n<td className=\"text-center\">\r\n{el.maximum_bid !== 0 &&(\r\n  <div className=\"bidd_name\">\r\n              <p className=\"highest\">{el.maximum_bid}</p>\r\n              <span className={el.buyer == users.link_id ? \"hname\" : \"rname\"}>\r\n             ({el.maximum_bid - el.price})\r\n              </span>\r\n            </div>\r\n)}\r\n      \r\n           \r\n            <br />\r\n</td>\r\n      <td className=\"text-center\">\r\n        {manualmode === true && selectedIndex === index ? (\r\n          <div className=\"mn-bid col-12\">\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onKeyPress={(event) => handleKeyPress(el,event, index)}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : el.maximum_bid === 0 ? (\r\n          <div className=\"mn-bid col-12\">\r\n            {/* <h5 className=\"card-price\">Max.{el.maximum_bid}</h5> */}\r\n            <input\r\n              className=\"form-control m_bid\"\r\n              autoComplete=\"off\"\r\n              type=\"number\"\r\n              id={`name${el.id}`}\r\n              name=\"name\"\r\n              value={el.name}\r\n              onChange={(e) => handleInputChange(e, index)}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n           \r\n          </>\r\n        )}\r\n      </td>\r\n \r\n{/* <td className=\"text-center\"> */}\r\n{/* {Number(el.pkgs) > 15 && el.buyer !== 0 && el.buyer !== uId ? (\r\n  <i\r\n    key={el.id}\r\n    onClick={() => shareBid(el.id)}\r\n    className=\"bi bi-share\"\r\n    style={{ backgroundColor: 'blue', color: 'white', fontSize: '14px' }}\r\n  ></i>\r\n) : null} */}\r\n\r\n{/* {Number(el.pkgs) > 15 && el.s_buyer !== 0 && el.buyer !== uId && el.maximum_bid !== 0 && (\r\n  <div className=\"bidd_name\">\r\n    <p className=\"highest\">{el.maximum_bid}</p>\r\n    <span className=\"sname\">\r\n      {el.s_buyer_name}({el.maximum_bid - el.price})\r\n    </span>\r\n  </div>\r\n)} */}\r\n\r\n\r\n\r\n{/* {el.open_share === 0 ? (\r\n            <button key={el.id} onClick={() => openShareBid(el.id)} type=\"\">\r\n              open share\r\n            </button>\r\n          ) : null} */}\r\n{/* </td> */}\r\n      <td className=\"text-center\" >\r\n        {el.maximum_bid === 0 ? (\r\n          <button\r\n            key={el.id + 10}\r\n            disabled={users.type === \"BIDDER\" ? false : true}\r\n            onClick={() => addBid(el, index)}\r\n            className=\"btn btn-danger square-circle\"\r\n          >\r\n            <FaHandPaper className=\"bid\" />\r\n          </button>\r\n        ) : (\r\n          <div className=\"col-12 \">\r\n            <div className=\"bidcont mb-2 d-flex justify-content-center\">\r\n            \r\n                  <button\r\n                    key={el.id + 11}\r\n                    disabled={disabledButtons.includes(index)}\r\n                    onClick={() => handleInc(el, index)}\r\n                    className=\" btn-danger square-circle bidbtn\"\r\n                  >\r\n                    +1\r\n                  </button>\r\n                  <button\r\n                    key={el.id}\r\n                    onClick={() => {\r\n                      if (manualmode === true && selectedIndex === index) {\r\n                        addBid(el, index);\r\n                      } else {\r\n                        setManualmode(true);\r\n                        setSelectedIndex(index);\r\n                      }\r\n                    }}\r\n                    className=\" btn-primary square-circle bidbtn\"\r\n                    style={{ fontSize: '10px' }}\r\n                  >\r\n                    <FaHandPaper className=\"bid\" />\r\n                  </button>\r\n                \r\n              \r\n            </div>\r\n          </div>\r\n        )}\r\n      </td>\r\n    </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BidderLotComponent;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Popup from \"../../components/Popup\";\r\nimport axios from \"axios\";\r\nimport music from \"../../assets/message.mp3\";\r\nimport notify from \"../../assets/starttune.mp3\";\r\nimport { getAllcatalogue } from \"../../store/catalogueSlice\";\r\nimport io from \"socket.io-client\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport ReactLoading from \"react-loading\";\r\nimport BidderLotComponent from \"../../components/reuseable/BidderLotComponent\";\r\nimport useSWR from 'swr';\r\nimport useCountdownTimer from \"../../components/hooks/useCountdownTimer\";\r\nconst socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\nconst Bidders = () => {\r\n  const [show, setShow] = useState(false);\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const dispatch = useDispatch();\r\n  const { auction_data } = useSelector((state) => state.auction);\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n  const [amountBid, setAmountbid] = useState([]);\r\n  const [manualbidIndex, setManualbidindex] = useState(\"\");\r\n  const [checkedItemName, setCheckedItemName] = useState(\"\");\r\n  const [checkedItemid, setCheckedItemid] = useState(\"\");\r\n  const [activebroker, setActivebroker] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [rawlist, setrawList] = useState([]);\r\n  const [buttonLoading, setbuttonLoading] = useState(false);\r\n  const [disabledButtons, setDisabledButtons] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bidloading, setbidLoading] = useState(false);\r\n  const [manualmode, setManualmode] = useState(false);\r\n\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      const { auction, current_brokers, name, id } = response.data[0];\r\n\r\n      if (auction === 0) {\r\n        setShowPopup(true);\r\n      } else {\r\n        setShowPopup(false);\r\n      }\r\n\r\n      await Promise.all([\r\n        setCheckedItemName(name),\r\n        setCheckedItemid(id),\r\n        setActivebroker(current_brokers),\r\n      ]);\r\n\r\n      socket.emit(\"user\", current_brokers);\r\n      // socket.emit(\"user_toggle\", current_brokers); need\r\n\r\n      const userToggleListener = (userId) => {\r\n        setVisible(userId === users.link_id);\r\n      };\r\n\r\n      socket.on(\"user_toggle\", userToggleListener);\r\n\r\n      // Cleanup function\r\n      return () => {\r\n        socket.off(\"users\", current_brokers);\r\n        // Remove the userToggleListener when the component unmounts\r\n        socket.off(\"user_toggle\", userToggleListener);\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    fetchData();\r\n    socket.on(\"checkname\", (data) => {\r\n      if (isMounted) {\r\n        setCheckedItemName(data);\r\n      }\r\n    });\r\n    socket.on(\"users\", (data) => {\r\n    \r\n      if (isMounted) {\r\n        const filteredData = data.filter((item) => item.sold_status === 0);\r\n        setList(data);\r\n        setrawList(data);\r\n      }\r\n    });\r\n    const handleActiveUsers = (count) => {\r\n      setActiveUsers(count);\r\n    };\r\n    socket.on(\"activeUsers\", handleActiveUsers);\r\n    return () => {\r\n      isMounted = false;\r\n  \r\n      socket.off(\"activeUsers\", handleActiveUsers);\r\n      // socket.off(\"users\")\r\n    };\r\n  }, [socket]);\r\n\r\n  // new method\r\n\r\n  const [secondsToAdd] = useState(60); // Number of seconds to add to current time\r\n\r\n  const [endTime, setEndTime] = useState(null); // Initialize endTime as null\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [remainingSeconds, setRemainingSeconds] = useState(secondsToAdd);\r\n  const [result, setResult] = useState(0);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"users\", (data) => {\r\n        setList(data);\r\n    });\r\n    \r\n    // Listen for the 'endTimeUpdated' event from the server\r\n    socket.on(\"endTimeUpdated\", (data) => {\r\n      setEndTime(new Date(data.endTime).getTime());\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"users\");\r\n    };\r\n  }, []);\r\n\r\n\r\n  const [sale, setSale] = useState('');\r\n  const [season, setSeason] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n\r\n  const fetchInitialList = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/catalougedata`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  const fetchEndTime = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/getEndTime`);\r\n      return response.data.endTime;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  const fetchBrokerData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      return response.data;\r\n      // console.log(response.data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const { data: fetchedList, error: listError } = useSWR(\"catalogData\", fetchInitialList,{revalidateOnFocus:true,revalidateOnReconnect:true});\r\n  const { data: fetchedEndTime, error: endTimeError } = useSWR(\"endTime\", fetchEndTime,{revalidateOnFocus:true,revalidateOnReconnect:true});\r\n  const { data: brokerData, error: brokerError } = useSWR(`${API_URL}/getselectbroker`, fetchBrokerData, {\r\n    revalidateOnFocus: true,\r\n    revalidateOnReconnect: true,\r\n    onSuccess: (data) => {\r\n      const { auction, current_brokers, name, id ,sale_no,season,date} = data[0];\r\n      if (auction === 0) {\r\n        setShowPopup(true);\r\n      } else {\r\n        setShowPopup(false);\r\n      }\r\n      setCheckedItemName(name);\r\n      // console.log(`done`+name);\r\n      setCheckedItemid(id);\r\n      setActivebroker(current_brokers);\r\n      setSale(sale_no);\r\n      setSeason(season);\r\n      setDate(date)\r\n    },\r\n  });\r\n  // console.log(fetchedList);\r\n\r\n  const { currentIndex,formattedTime ,remainingTime,totalRemainingSeconds} = useCountdownTimer(endTime);\r\n  \r\n  useEffect(() => {\r\n    if (fetchedList) {\r\n      setList(fetchedList);\r\n    }\r\n    if (fetchedEndTime) {\r\n      setEndTime(new Date(Number(fetchedEndTime)).getTime());\r\n    }\r\n    \r\n  }, [fetchedList, fetchedEndTime]);\r\n\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n    \r\n  //   if (endTime) {\r\n  //     const interval = setInterval(() => {\r\n  //       const now = new Date();\r\n  //       setCurrentTime(now);\r\n\r\n  //       const remainingTime = Math.floor((endTime - now.getTime()) / 1000);\r\n\r\n  //       if (remainingTime <= 0) {\r\n  //         clearInterval(interval); // Clear interval when remaining time reaches zero\r\n  //         setRemainingSeconds(0); // Set remaining seconds to zero\r\n  //       } else {\r\n  //         setRemainingSeconds(remainingTime);\r\n  //         setResult(Math.ceil(remainingTime / 60)); // Calculate and set the result using Math.ceil\r\n  //       }\r\n  //     }, 1000); // Update every 1 second\r\n\r\n  //     return () => clearInterval(interval); // Clean up the interval when component unmounts\r\n  //   }\r\n  // }, [endTime]);\r\n\r\n\r\n//  console.log(remainingTime.seconds);\r\n  // const countdownDisplay = Array.from(\r\n  //   { length: remainingSeconds },\r\n  //   (_, index) => (remainingSeconds - index) % 60 || 60\r\n  // );\r\n  // const firstCountdownResult = countdownDisplay[0];\r\n\r\n  const objectToShow = list ? list[currentIndex] : {};\r\n\r\n  const prevList = list ? list[currentIndex+1 ] : {};\r\n\r\n  \r\n  const handleInputChange = (event, index) => {\r\n    const { name, value } = event.target;\r\n    setAmountbid((prevState) => {\r\n      const updatedState = [...prevState];\r\n      updatedState[index] = { ...updatedState[index], [name]: value };\r\n      return updatedState;\r\n    });\r\n    setManualbidindex(index);\r\n    // console.log(manualbidIndex);\r\n  };\r\n\r\n  //bidder modal\r\n  const openLot = async () => {\r\n    await axios\r\n      .get(`${API_URL}/getselectbroker`)\r\n      .then((response) => {\r\n        socket.emit(\"user\", response.data[0].current_brokers);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    dispatch(getAllcatalogue);\r\n    setShow(true);\r\n  };\r\n\r\n  //manuall bid data insert\r\n\r\n  const addBid = async (el, index) => {\r\n    const mxbid = el.maximum_bid;\r\n    const percent = mxbid * 0.5;\r\n    const eligiblebid = mxbid + percent;\r\n    const bidValue = amountBid[index]?.name;\r\n  \r\n    if (!bidValue) {\r\n      setManualmode(false);\r\n      return;\r\n    }\r\n  \r\n    if (mxbid !== 0 && bidValue < mxbid) {\r\n      alert(\"Bid value should be greater than or equal to the maximum bid.\");\r\n      return;\r\n    }\r\n  \r\n    if (bidValue > eligiblebid && mxbid !== 0) {\r\n      alert(\"You can only bid up to 50% of the maximum bid.\");\r\n      return;\r\n    }\r\n    setbidLoading(true);\r\n    const bidsToUpdate = {\r\n      id: el.id,\r\n      bid: bidValue,\r\n      sold_status: Number(bidValue)>Number(el.price)?1:el.sold_status,\r\n      buyer: users.link_id,\r\n    };\r\n  \r\n    try {\r\n      await axios.put(`${API_URL}/manualbid`, bidsToUpdate);\r\n      socket.emit(\"user\", activebroker);\r\n      await socket.on(\"user\"(data=>{\r\n         setList(data)\r\n      }))\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setManualmode(false);\r\n    setbidLoading(false);\r\n   \r\n  };\r\n  \r\n\r\n\r\n  const handleKeyPress = (el,event,index) => {\r\n    if (event.key === 'Enter') {\r\n      addBid(el, index)\r\n    }\r\n  };\r\n  //sharebid\r\n  \r\n    \r\n\r\n  //bid update\r\n  const handleInc = async (el, index) => {\r\n    setDisabledButtons((prevDisabledButtons) => [\r\n      ...prevDisabledButtons,\r\n      index,\r\n    ]);\r\n    setbidLoading(true);\r\n    const audio = new Audio(music);\r\n\r\n    const updatedData = list.map((obj, idx) => {\r\n      if (obj.id === el.id) {\r\n        return {\r\n          ...obj,\r\n          maximum_bid: obj.maximum_bid + 1,\r\n          buyer: users.link_id,\r\n          key: idx,\r\n          sold_status: Number(obj.maximum_bid+1)>Number(obj.price)?1:obj.sold_status,\r\n        };\r\n      }\r\n      return { ...obj, key: idx };\r\n    });\r\n\r\n    const filteredData = updatedData.filter((item) => item.id === el.id);\r\n    try {\r\n      await axios.put(`${API_URL}/updateauction`, filteredData);\r\n      socket.emit(\"user\", activebroker);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      // setList(updatedData);\r\n      audio.play();\r\n      setbuttonLoading(false);\r\n      setbidLoading(false);\r\n      setDisabledButtons((prevDisabledButtons) =>\r\n        prevDisabledButtons.filter((btnIndex) => btnIndex !== index)\r\n      );\r\n    }\r\n  };\r\n\r\n  const filteredData = rawlist.filter((item) => item.buyer === users.link_id);\r\n\r\n  if (endTime === null || list === null) {\r\n    // Data is still being fetched, so return a loading indicator or null\r\n    return <div\r\n    style={{\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    <ReactLoading\r\n      type={\"spin\"}\r\n      color={\"#007bff\"}\r\n      height={50}\r\n      width={50}\r\n    />\r\n    <div\r\n      style={{\r\n        marginTop: \"20px\",\r\n        fontSize: \"16px\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      Verifying Data...\r\n    </div>\r\n  </div>;\r\n  }\r\n  return (\r\n    <>\r\n      {bidloading ? (\r\n        <>\r\n          <div className=\"overlay\">\r\n            <div className=\"spinner-container\">\r\n              <div className=\"spinner\"></div>\r\n              <span>Verifying data...</span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {loading && users.type !== \"\" ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#007bff\"}\r\n              height={50}\r\n              width={50}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              Verifying Data...\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n       \r\n       <Modal\r\n            title=\"My Lot\"\r\n            onClose={() => setShow(false)}\r\n            show={show}\r\n            filteredData={\r\n           filteredData\r\n            }\r\n          ></Modal>\r\n          <div className=\"section-head sec-h\">\r\n            <p className=\"br-n\">={checkedItemName.toUpperCase()}=</p>\r\n            <div className=\"row newc\">\r\n              <div className=\"col-7 col-md-9 card-btn leftCard\">\r\n              <h2>\r\n                     AUCTION DATE :{\" \"}\r\n                      {date?date:''}\r\n                    </h2>\r\n                    <p className=\"sell-text\">\r\n                      SALE NO - #\r\n                      {sale?sale:''} (CEREMONIAL SALE)\r\n                    </p>\r\n                    <p  className=\"sell-text\">PARTICIPATE - #{activeUsers} </p>\r\n                    <p  className=\"sell-text\">\r\n                      SEASON - #\r\n                      {season?season:''}\r\n                    </p>\r\n                    <p  className=\"sell-text\">\r\n                      CURRENT BROKER :{\" \"}\r\n                      <span className=\"\">{checkedItemName.toUpperCase()}</span>{\" \"}\r\n                    </p>\r\n\r\n                               <div className=\" row margin-left\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={openLot}\r\n                    className=\"col-5 buttonGroup btn btn-success my-btn\"\r\n                  >\r\n                    My Lot\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-5 col-md-3 align-items-center justify-content-center mt-5 rCard\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"row rightCard\">\r\n                      <div className=\" \">\r\n                        <div className=\"col-md-12 count-t\">\r\n                          <h2 className=\"text-center mh2\">\r\n                          {formattedTime}\r\n                          </h2>\r\n                        </div>\r\n                        <div className=\"col-md-12 name-t\">\r\n                          <h2 className=\"mh2 text-center\">\r\n                            {users.short_name}\r\n                          </h2>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                        <h4 className=\" text-center fw-bold fs-4\">\r\n                          TOTAL : {list.length} LOT\r\n                        </h4>\r\n                       \r\n                      </div>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card p-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-md-3 d-flex justify-content-start align-items-center\">\r\n        <span style={{ backgroundColor: 'white',color:'black', padding: '5px', fontSize: '12px' }}>PLZ BID</span>\r\n          <span style={{ backgroundColor: '#6f6fc4',color:'white', padding: '5px', fontSize: '12px' }}>HBH</span>\r\n        </div>\r\n        <div className=\"col-6 col-md-9 d-flex justify-content-end\" style={{paddingRight:'20px'}}>\r\n          <span style={{ backgroundColor: 'black',color:'white', padding: '5px', fontSize: '12px' }}>{formattedTime}</span>\r\n \r\n        </div>\r\n      </div>\r\n    </div>\r\n          {formattedTime === '0:00' &&  users.type === \"BIDDER\" ? (\r\n            <>\r\n           \r\n              <Popup />\r\n            </>\r\n          ) : (\r\n            <>\r\n           \r\n              <div className=\"table-container con\">\r\n                <div className=\"row g-1 bid-table\">\r\n                  <table id=\"auction\" className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">\r\n                          Lot <br />\r\n                          Invoice\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Factory\r\n                          <br />\r\n                          Grade\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Price\r\n                          <br />\r\n                          Qty\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Highest\r\n                          <br /> Buyer\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Bid</th>\r\n                        \r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n        \r\n                    {objectToShow && (\r\n          <BidderLotComponent\r\n            handleKeyPress={handleKeyPress}\r\n            uId={users.link_id}\r\n            sl={''}\r\n            time={''}\r\n            key={objectToShow.id}\r\n            el={objectToShow}\r\n            index={objectToShow.id}\r\n            setManualmode={setManualmode}\r\n            setSelectedIndex={setSelectedIndex}\r\n            users={users}\r\n            formatTime={''}\r\n            manualmode={manualmode}\r\n            selectedIndex={selectedIndex}\r\n            handleInputChange={handleInputChange}\r\n            addBid={addBid}\r\n            handleInc={handleInc}\r\n            disabledButtons={disabledButtons}\r\n          />\r\n        )}\r\n                      \r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"\">\r\n                <div className=\"row\">\r\n              {prevList?(\r\n                   <>\r\n                   <div className=\"col-12 col-md-12\">\r\n                    <div className=\"card\">\r\n                      <div className={prevList.sold_status===0?\"rem-card-x\":\"rem-card-y\"}>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-8\">\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">Lot - ({prevList.lot}) {prevList.factory_name} </p>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                              <p className=\"rem-text\">{prevList.buyer_name}({prevList.maximum_bid - prevList.price})</p>\r\n                            </div>\r\n                          </div>\r\n                          <div className={`col-4 d-flex align-items-center justify-content-center ${prevList.sold_status === 0 ? 'btcls' : 'btctik'}`}>\r\n \r\n                            <div className=\"row\">\r\n                              <div className=\"col-12 \">\r\n                                <i className={prevList.sold_status===0?\"bi bi-x-circle \":\"bi bi-check2-circle\"}></i>\r\n                              </div>\r\n                            \r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                   </>\r\n                  ):('')}\r\n                </div>\r\n              </div>\r\n              </div>\r\n              \r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ViewList from \"./auction/Bidders\";\r\n\r\nconst Bidders = () => {\r\n  const history = useNavigate();\r\n \r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const signout = () => {\r\n    sessionStorage.removeItem('token');\r\n    history('/');\r\n  };\r\n  \r\n \r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) {     // If there is no token, the user is not authenticated, so you can redirect them to the desired page\r\n      history('/');\r\n    } else {\r\n      history('/bidders');\r\n    }\r\n  }, []);\r\n  \r\n  // useEffect(() => {\r\n  //   const token = sessionStorage.getItem('token');\r\n  \r\n  //   Axios.get(`${API_URL}/verify`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       if (res.data.Status === \"Success\") {\r\n  //         history(\"/bidders\");\r\n  //       } else {\r\n  //         history(\"/\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n       <section className=\"content-header\">\r\n\r\n</section>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ViewList />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bidders;\r\n"],"sourceRoot":""}