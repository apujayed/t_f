{"version":3,"sources":["components/hooks/useCountdownTimer.js","components/ModalBroker/Modal.js","components/reuseable/LotCardComponent.js","pages/auction/ViewList.js","pages/Auction.js"],"names":["useCountdownTimer","endTime","_useState","useState","Date","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","minutes","seconds","_useState4","remainingTime","setRemainingTime","_useState5","_useState6","currentIndex","setCurrentIndex","_useState7","_useState8","totalRemainingSeconds","setTotalRemainingSeconds","useEffect","interval","setInterval","now","timeDiff","getTime","clearInterval","Math","floor","formattedTime","concat","ModalBroker","props","filteredData","modalRef","useRef","closeOnEscapeKeyDown","e","charCode","keyCode","onClose","document","body","addEventListener","removeEventListener","_jsx","_Fragment","children","CSSTransition","nodeRef","in","show","unmountOnExit","timeout","enter","exit","className","onClick","ref","_jsxs","stopPropagation","title","scope","map","el","index","lot","factory_name","maximum_bid","buyer_name","sold_status","type","onV","aria-hidden","id","LotCardComponent","_ref","sl","users","handleSoldstatus","formatTime","time","invoice","grade","price","pkgs","buyer","link_id","disabled","brokers","FaRegCheckSquare","FaRegWindowClose","socket","io","connect","process","ViewList","show2","setShow2","API_URL","usersString","useSelector","state","auction","auction_data","localStorage","getItem","JSON","parse","checkedItemName","setCheckedItemName","setCheckedItemid","setActivebroker","_useState9","_useState10","list","setList","_useState11","_useState12","setrawList","_useState13","_useState14","startIndex","_useState15","_useState16","_useState17","_useState18","activeUsers","setActiveUsers","_useState19","_useState20","setVisible","_useState21","_useState22","setShowPopup","_useState23","_useState24","_useState25","_useState26","bidloading","setbidLoading","_useState27","_useState28","sale","setSale","_useState29","_useState30","season","setSeason","_useState31","_useState32","date","setDate","fetchInitialList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","t0","stop","apply","arguments","fetchEndTime","_ref2","_callee2","_context2","fetchBrokerData","_ref3","_callee3","_context3","_useSWR","useSWR","revalidateOnFocus","revalidateOnReconnect","fetchedList","_useSWR2","error","fetchedEndTime","_useSWR3","onSuccess","_data$","current_brokers","name","sale_no","setEndTime","Number","_ref4","_callee4","status","value","brokerResponse","_context4","put","emit","on","filter","item","console","log","_x","_x2","openLot2","_ref5","_callee5","_context5","_useState33","_useState34","fetchData","_ref6","_callee6","_response$data$","userToggleListener","_context6","Promise","all","userId","disconnect","isMounted","count","_useState35","_useState37","_useState38","_useCountdownTimer","remainingSeconds","result","_useState39","_useState40","loadingStatus","setLoadingstatus","handleSaveEndTime","_ref7","_callee7","dbSave","_context7","length","post","mutate","objectToShow","toUpperCase","short_name","Array","isArray","style","height","display","flexDirection","justifyContent","alignItems","ReactLoading","color","width","marginTop","fontSize","fontWeight","Auction","history","useNavigate","token","sessionStorage"],"mappings":"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","file":"static/js/11.28ddf1bf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useCountdownTimer = (endTime) => {\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [remainingTime, setRemainingTime] = useState({ minutes: 0, seconds: 0 });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [totalRemainingSeconds, setTotalRemainingSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (endTime) {\r\n      const interval = setInterval(() => {\r\n        const now = new Date();\r\n        setCurrentTime(now);\r\n\r\n        const timeDiff = endTime - now.getTime();\r\n        if (timeDiff <= 0) {\r\n          clearInterval(interval);\r\n          setRemainingTime({ minutes: 0, seconds: 0 });\r\n        } else {\r\n          const minutes = Math.floor(timeDiff / 60000);\r\n          const seconds = Math.floor((timeDiff / 1000) % 60);\r\n          setRemainingTime({ minutes, seconds });\r\n\r\n          // Calculate the current index by dividing remaining seconds by 120\r\n          const currentIndex = Math.floor(timeDiff / 120000);\r\n          setCurrentIndex(currentIndex);\r\n\r\n          // Set total remaining seconds rounded down to the nearest whole number\r\n          setTotalRemainingSeconds(Math.floor(timeDiff / 1000));\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [endTime]);\r\n\r\n  const formattedTime = `${remainingTime.minutes}:${remainingTime.seconds < 10 ? '0' : ''}${remainingTime.seconds}`;\r\n\r\n  return { currentTime, remainingTime, formattedTime, currentIndex, totalRemainingSeconds };\r\n};\r\n\r\nexport default useCountdownTimer;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./Modal.css\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ModalBroker = (props) => {\r\n  const [modaldata, setmodaldata] = useState(props.filteredData);\r\n  const [update, setUpdate] = useState(false);\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const handleSoldstatus = async (el, status) => {\r\n    setUpdate(true);\r\n    const id = el.id;\r\n    const value = status;\r\n\r\n    await axios\r\n      .put(`${API_URL}/updatesold`, {\r\n        id: id,\r\n        status: value,\r\n      })\r\n      .then((response) => {\r\n        axios\r\n          .get(`${API_URL}/catalougedata`)\r\n          .then((response) => {\r\n            props.onClose();\r\n            setmodaldata(response.data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const closeOnEscapeKeyDown = (e) => {\r\n    if ((e.charCode || e.keyCode) === 27) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    return function cleanup() {\r\n      document.body.removeEventListener(\"keydown\", closeOnEscapeKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        nodeRef={modalRef}\r\n        in={props.show}\r\n        unmountOnExit\r\n        timeout={{ enter: 0, exit: 300 }}\r\n      >\r\n        <div className=\"modal\" onClick={props.onClose} ref={modalRef}>\r\n          <div\r\n            className=\"modal-content\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{props.title}</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <table className=\"modaltable table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Lot</th>\r\n                    <th scope=\"col\">Factory</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Bidder</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props.filteredData.map((el, index) => (\r\n                    <tr key={el.id}>\r\n                      <td scope=\"row\">\r\n                        <h4>{index + 1}</h4>\r\n                      </td>\r\n                      <td>\r\n                        <h4>{el.lot}</h4>\r\n                      </td>\r\n                      <td>\r\n                        <h4>{el.factory_name}</h4>\r\n                      </td>\r\n                      <td>\r\n                        <h4>{el.maximum_bid}</h4>\r\n                      </td>\r\n                      <td>\r\n                        <h4>{el.buyer_name}</h4>\r\n                      </td>\r\n                      <td>\r\n                        <span\r\n                          className={\r\n                            el.sold_status === 1\r\n                              ? \"hname\"\r\n                              : el.sold_status === 0\r\n                              ? \"rname\"\r\n                              : \"rname\"\r\n                          }\r\n                        >\r\n                          {el.sold_status === 1\r\n                            ? \"Sold\"\r\n                            : el.sold_status === 0\r\n                            ? \"Unsold\"\r\n                            : \"Pending\"}\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => props.onV(el, 1)}\r\n                          className=\"btn btn-success px-3\"\r\n                        >\r\n                          <i className=\"fas fa-check\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => props.onV(el, 0)}\r\n                          className=\"btn btn-danger px-3\"\r\n                        >\r\n                          <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        {/* <button\r\n                          type=\"button\"\r\n                          onClick={() => props.reAuc(el)}\r\n                          className=\"btn btn-info px-3\"\r\n                        >\r\n                          <i className=\"fas fa-spinner\" aria-hidden=\"true\"></i>\r\n                        </button> */}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button onClick={props.onClose} className=\"btn btn-danger\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalBroker;\r\n","import React from 'react'\r\nimport {FaRegWindowClose,\r\n    FaRegCheckSquare,\r\n    } from \"react-icons/fa\";\r\n    const LotCardComponent = ({ sl,el, users, handleSoldstatus, formatTime, time ,index}) => (\r\n      <tr>\r\n              <td className=\"text-center\">\r\n                {el.lot}\r\n                <br />\r\n                {el.invoice}\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {el.factory_name}\r\n                <br />\r\n              ({el.grade})\r\n              \r\n\r\n              </td>\r\n              <td className=\"text-center\">\r\n                {el.price}\r\n                <br />\r\n                {`(${el.pkgs})`}\r\n              </td>\r\n              <td className=\"text-center\">\r\n              <div className=\"bidd_name\">\r\n                      <p className=\"highest\">{el.maximum_bid}</p>\r\n                      <span\r\n                        className={\r\n                          el.buyer == users.link_id ? \"hname\" : \"rname\"\r\n                        }\r\n                      >\r\n                        {el.buyer_name}({el.maximum_bid - el.price})\r\n                      </span>\r\n                    </div>\r\n\r\n                    <br />\r\n              </td>\r\n\r\n              <td className=\"text-center\">\r\n               \r\n              <div className=\"col-md-12 d-flex justify-content-center align-items-center col-sm-12 col-xs-12\">\r\n\r\n                  <div className=\"\">\r\n                    <button\r\n                      onClick={() => handleSoldstatus(el, 1)}\r\n                      disabled={el.brokers === users.link_id ? false : true}\r\n                      className={\r\n                        el.sold_status === 1\r\n                          ? \"btn-success square-circle mr-4\"\r\n                          : el.sold_status === 2\r\n                          ? \" btn-warning square-circle mr-4\"\r\n                          : \" btn-warning square-circle mr-4\"\r\n                      }\r\n                    >\r\n                      <FaRegCheckSquare className=\"bid\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleSoldstatus(el, 0)}\r\n                      disabled={el.brokers === users.link_id ? false : true}\r\n                      className=\" btn-danger square-circle\"\r\n                    >\r\n                      <FaRegWindowClose className=\"bid\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n      );\r\n      \r\n\r\nexport default LotCardComponent\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n// import music from \"../../assets/message.mp3\";\r\n// import notify from \"../../assets/starttune.mp3\";\r\nimport io from \"socket.io-client\";\r\nimport ModalBroker from \"../../components/ModalBroker/Modal\";\r\nimport ReactLoading from \"react-loading\";\r\n// import { throttle } from \"lodash\";\r\n// import { getAuctiondetails } from \"../../store/auctionSlice\";\r\nimport LotCardComponent from \"../../components/reuseable/LotCardComponent\";\r\nimport useSWR,{ mutate }  from 'swr';\r\nimport useCountdownTimer from \"../../components/hooks/useCountdownTimer\"\r\nconst socket = io.connect(process.env.REACT_APP_SERVER_URL);\r\nconst ViewList = () => {\r\n  const [show2, setShow2] = useState(false);\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const { auction_data } = useSelector((state) => state.auction);\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n  const [checkedItemName, setCheckedItemName] = useState(\"\");\r\n  const [checkedItemid, setCheckedItemid] = useState(\"\");\r\n  const [activebroker, setActivebroker] = useState();\r\n  const [list, setList] = useState([]);\r\n  const [rawlist, setrawList] = useState([]);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(1);\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [time, setTime] = useState(0);\r\n  // const [isRunning, setIsRunning] = useState(false);\r\n\r\n  const [bidloading, setbidLoading] = useState(false);\r\n\r\n  // const dispatch = useDispatch();\r\n \r\n  const [sale, setSale] = useState('');\r\n  const [season, setSeason] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n\r\n  const fetchInitialList = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/catalougedata`);\r\n    \r\n      return response.data;\r\n     \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  const fetchEndTime = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/api/getEndTime`);\r\n      return response.data.endTime;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  const fetchBrokerData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      return response.data;\r\n      // console.log(response.data);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  const { data: fetchedList, error: listError } = useSWR(\"catalogData\", fetchInitialList,{revalidateOnFocus:true,revalidateOnReconnect:true});\r\n  const { data: fetchedEndTime, error: endTimeError } = useSWR(\"endTime\", fetchEndTime,{revalidateOnFocus:true,revalidateOnReconnect:true});\r\n  const { data: brokerData, error: brokerError } = useSWR(`${API_URL}/getselectbroker`, fetchBrokerData, {\r\n    revalidateOnFocus: true,\r\n    revalidateOnReconnect: true,\r\n    onSuccess: (data) => {\r\n      const { auction, current_brokers, name, id ,sale_no,season,date} = data[0];\r\n      if (auction === 0) {\r\n        setShowPopup(true);\r\n      } else {\r\n        setShowPopup(false);\r\n      }\r\n      setCheckedItemName(name);\r\n      // console.log(`done`+name);\r\n      setCheckedItemid(id);\r\n      setActivebroker(current_brokers);\r\n      setSale(sale_no);\r\n      setSeason(season);\r\n      setDate(date)\r\n    },\r\n  });\r\n  // console.log(fetchedList);\r\n  useEffect(() => {\r\n    if (fetchedList) {\r\n      setList(fetchedList);\r\n    }\r\n    if (fetchedEndTime) {\r\n      setEndTime(new Date(Number(fetchedEndTime)).getTime());\r\n    }\r\n  }, [fetchedList, fetchedEndTime]);\r\n\r\n\r\n  const handleSoldstatus = async (el, status) => {\r\n    try {\r\n      setbidLoading(true);\r\n      const id = el.id;\r\n      const value = status;\r\n\r\n      await axios.put(`${API_URL}/updatesold`, {\r\n        id: id,\r\n        status: value,\r\n      });\r\n\r\n      const brokerResponse = await axios.get(`${API_URL}/getselectbroker`);\r\n      socket.emit(\"user\", brokerResponse.data[0].current_brokers);\r\n      setbidLoading(false);\r\n\r\n      socket.on(\"users\", (data) => {\r\n        const filteredData = data.filter((item) => item.sold_status === 0);\r\n        setList(data);\r\n        setrawList(data);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //bidders modal\r\n  const openLot2 = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      socket.emit(\"user\", response.data[0].current_brokers);\r\n      setShow2(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const filteredDatabrokers = list;\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/getselectbroker`);\r\n      const { auction, current_brokers, name, id } = response.data[0];\r\n      if (auction === 0) {\r\n        setShowPopup(true);\r\n      } else {\r\n        setShowPopup(false);\r\n      }\r\n\r\n      await Promise.all([\r\n        setCheckedItemName(name),\r\n        setCheckedItemid(id),\r\n        setActivebroker(current_brokers),\r\n      ]);\r\n\r\n      socket.emit(\"user\", current_brokers);\r\n      // socket.emit(\"user_toggle\", current_brokers); need\r\n\r\n      const userToggleListener = (userId) => {\r\n        setVisible(userId === users.link_id);\r\n      };\r\n\r\n      socket.on(\"user_toggle\", userToggleListener);\r\n\r\n      // Cleanup function\r\n      return () => {\r\n        socket.disconnect();\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    fetchData();\r\n    socket.on(\"checkname\", (data) => {\r\n      if (isMounted) {\r\n        setCheckedItemName(data);\r\n      }\r\n    });\r\n    socket.on(\"users\", (data) => {\r\n      if (isMounted) {\r\n        const filteredData = data.filter((item) => item.sold_status === 0);\r\n        setList(data);\r\n        setrawList(data);\r\n      }\r\n    });\r\n    const handleActiveUsers = (count) => {\r\n      setActiveUsers(count);\r\n    };\r\n    socket.on(\"activeUsers\", handleActiveUsers);\r\n    return () => {\r\n      isMounted = false;\r\n      socket.disconnect();\r\n      // socket.off(\"users\")\r\n    };\r\n  }, [socket]);\r\n\r\n  // new method\r\n\r\n  const [secondsToAdd] = useState(60); // Number of seconds to add to current time\r\n\r\n  const [endTime, setEndTime] = useState(null); // Initialize endTime as null\r\n  const { currentTime, remainingSeconds, result,currentIndex,formattedTime } = useCountdownTimer(endTime);\r\n  useEffect(() => {\r\n    // Listen for the 'endTimeUpdated' event from the server\r\n    socket.on(\"endTimeUpdated\", (data) => {\r\n      console.log(data);\r\n      setEndTime(new Date(data.endTime).getTime());\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\nconst [loadingStatus, setLoadingstatus] = useState(false);\r\n\r\n  const handleSaveEndTime = async () => {\r\n    setLoadingstatus(true)\r\n    console.log(`need`+list.length);\r\n    const dbSave = new Date().getTime() + list.length * 120 * 1000;\r\n    try {\r\n      await axios.post(`${API_URL}/api/saveEndTime`, { dbSave }); // Replace with your API endpoint and data\r\n      // window.location.reload();\r\n      console.log(\"EndTime saved successfully\");\r\n      mutate(\"catalogData\");\r\n      mutate(\"endTime\");\r\n      setLoadingstatus(false)\r\n    } catch (error) {\r\n      console.error(\"Error saving endTime:\", error);\r\n    }\r\n  };\r\n  // const formatTime = (time) => {\r\n  //   const minutes = Math.floor(time / 60)\r\n  //     .toString()\r\n  //     .padStart(2, \"0\");\r\n  //   const seconds = (time % 60).toString().padStart(2, \"0\");\r\n  //   return `${minutes}:${seconds}`;\r\n  // };\r\n  // const countdownDisplay = Array.from(\r\n  //   { length: remainingSeconds },\r\n  //   (_, index) => (remainingSeconds - index) % 60 || 60\r\n  // );\r\n  // const firstCountdownResult = countdownDisplay[0];\r\n\r\n  const objectToShow = list[currentIndex];\r\n// console.log(objectToShow);\r\n\r\n \r\n  return (\r\n    <>\r\n      \r\n      {checkedItemName === users.name ? (\r\n        <>\r\n          {bidloading ? (\r\n            <>\r\n              <div className=\"overlay\">\r\n                <div className=\"spinner-container\">\r\n                  <div className=\"spinner\"></div>\r\n                  <span>Verifying data...</span>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {!list ? (\r\n            <>\r\n              <div\r\n                style={{\r\n                  height: \"100vh\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <ReactLoading\r\n                  type={\"spin\"}\r\n                  color={\"#007bff\"}\r\n                  height={50}\r\n                  width={50}\r\n                />\r\n                <div\r\n                  style={{\r\n                    marginTop: \"20px\",\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  aasVerifying Data...\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <ModalBroker\r\n                title=\"Brokers Lot\"\r\n                onClose={() => setShow2(false)}\r\n                show={show2}\r\n                filteredData={list}\r\n                onV={handleSoldstatus}\r\n                // reAuc={reAuction}\r\n              ></ModalBroker>\r\n\r\n              <div className=\"section-head sec-h\">\r\n                <p className=\"br-n\">={checkedItemName.toUpperCase()}=</p>\r\n                <div className=\"row newc\">\r\n                  <div className=\"col-7 col-md-9 card-btn leftCard\">\r\n                    <h2>\r\n                     AUCTION DATE :{\" \"}\r\n                      {date?date:''}\r\n                    </h2>\r\n                    <p className=\"sell-text\">\r\n                      SALE NO - #\r\n                      {sale?sale:''} (CEREMONIAL SALE)\r\n                    </p>\r\n                    <p  className=\"sell-text\">PARTICIPATE - #{activeUsers} </p>\r\n                    <p  className=\"sell-text\">\r\n                      SEASON - #\r\n                      {season?season:''}\r\n                    </p>\r\n                    <p  className=\"sell-text\">\r\n                      CURRENT BROKER :{\" \"}\r\n                      <span className=\"\">{checkedItemName.toUpperCase()}</span>{\" \"}\r\n                    </p>\r\n\r\n                    <div className=\" row margin-left\">\r\n                      {users.type === \"BROKERS\" ? (\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={openLot2}\r\n                          className=\"col-5  buttonGroup btn btn-primary  my-btn\"\r\n                        >\r\n                          All Lot\r\n                        </button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-5 col-md-3 align-items-center justify-content-center mt-5 rCard\">\r\n                    <div className=\"bflex card-btn rightButton\">\r\n                      <div className=\"button-row\">\r\n                        <button\r\n                          disabled={loadingStatus}\r\n                          type=\"button\"\r\n                          onClick={handleSaveEndTime}\r\n                          className=\"buttonGroup btn btn-primary my-btn\"\r\n                        >\r\n                          START\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                      <div className=\"card\">\r\n                        <div className=\"row rightCard\">\r\n                          <div className=\" \">\r\n                            <div className=\"col-md-6 count-t\">\r\n                              <h2 className=\"text-center mh2\">\r\n                                {\r\n                                  formattedTime\r\n                                }\r\n                                {/* {currentIndex} */}\r\n                              </h2>\r\n                            </div>\r\n                            <div className=\"col-md-6 name-t\">\r\n                              <h2 className=\"mh2 text-center\">\r\n                                {users.short_name}\r\n                              </h2>\r\n                            </div>\r\n                            <div>\r\n                      <div className=\"col-md-12 name-t mh3\">\r\n                        <h4 className=\" text-center fw-bold fs-4\">\r\n                          TOATL : {list.length} LOT\r\n                        </h4>\r\n                       \r\n                      </div>\r\n                      {/* <div className=\"col-md-12 name-t mh3\">\r\n                      <h4 className=\" text-center\">\r\n                          Remainig Lot : {result?result:''} \r\n                        </h4>\r\n                       \r\n                      </div> */}\r\n                    </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n{/*  */}\r\n              <h2 className=\"text-center p-h\">-={users.type} PANEL=- </h2>\r\n              <hr className=\"hr-h\" />\r\n              <div className=\"con\">\r\n                <div className=\"row g-1\">\r\n                  <table id=\"auction\" className=\"table table-bordered\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">\r\n                          Lot <br />\r\n                          Invoice\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Factory\r\n                          <br />\r\n                          Grade\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Price\r\n                          <br />\r\n                          Qty\r\n                        </th>\r\n                        <th scope=\"col\">\r\n                          Highest\r\n                          <br /> Buyer\r\n                        </th>\r\n\r\n                        <th scope=\"col\">Bid</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {objectToShow ? (\r\n                        <LotCardComponent\r\n                          sl={startIndex}\r\n                          el={objectToShow}\r\n                          users={users}\r\n                          handleSoldstatus={handleSoldstatus}\r\n                          formatTime={\"\"}\r\n                          time={time} // Add the time prop here\r\n                        />\r\n                      ) : (\r\n                        <p>No object to show.</p>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"\">\r\n                  <div className=\"row\">\r\n                    {Array.isArray(objectToShow) &&\r\n                      objectToShow.map((el, index) => (\r\n                        <div className=\"col-12 col-md-12\" key={index++}>\r\n                          <div className=\"card\">\r\n                            <div\r\n                              className={\r\n                                el.sold_status === 1\r\n                                  ? \"rem-card-y\"\r\n                                  : \"rem-card-x\"\r\n                              }\r\n                            >\r\n                              <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                  <div className=\"col-12\">\r\n                                    <p className=\"rem-text\">\r\n                                      {el.factory_name} ({el.lot})\r\n                                    </p>\r\n                                  </div>\r\n                                  <div className=\"col-12\">\r\n                                    <p className=\"rem-text\">\r\n                                    (\r\n                                      {el.maximum_bid - el.price})\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-4 d-flex align-items-center justify-content-center\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                      <i className=\"bi bi-sun\"></i>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                      <i className=\"bi bi-moon\"></i>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div\r\n            style={{\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#007bff\"}\r\n              height={50}\r\n              width={50}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: \"20px\",\r\n                fontSize: \"16px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              You are not selected to perform...\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewList;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport ViewList from \"./auction/ViewList\";\r\n\r\nconst Auction = () => {\r\n  const history = useNavigate();\r\n \r\n  const API_URL = process.env.REACT_APP_SERVER_URL;\r\n  const signout = () => {\r\n    sessionStorage.removeItem('token');\r\n    history('/');\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (!token) {     // If there is no token, the user is not authenticated, so you can redirect them to the desired page\r\n      history('/');\r\n    } else {\r\n      history('/auction');\r\n    }\r\n  }, []);\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   const token = sessionStorage.getItem('token');\r\n  \r\n  //   Axios.get(`${API_URL}/verify`, {\r\n  //     headers: {\r\n  //       Authorization: `Bearer ${token}`\r\n  //     }\r\n  //   })\r\n  //     .then((res) => {\r\n  //       if (res.data.Status === \"Success\") {\r\n  //         history(\"/auction\");\r\n  //       } else {\r\n  //         history(\"/\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error);\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n       <section className=\"content-header\">\r\n\r\n</section>\r\n      <section className=\"content\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12\">\r\n            <ViewList />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auction;\r\n"],"sourceRoot":""}