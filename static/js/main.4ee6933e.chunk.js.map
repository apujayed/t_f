{"version":3,"sources":["store/catalogueSlice.js","store/loginSlice.js","components/SideMenu.js","components/Report/OpenHTMLButton.js","components/Report/CatalougueList.js","components/Report/AuctionReport.js","components/Report/SoldReport.js","components/Report/ValuationReport.js","components/Report/InvoiceGenerate.js","components/Report/TestingReport.js","components/Report/AuctionSummaryBuyer.js","components/Report/FactorywiseSummary.js","components/Report/FactorySold.js","components/Report/BrokersSummary.js","components/Report/BiddersoldReport.js","pages/ReportAll.js","App.js","reportWebVitals.js","store/getDataSlice.js","store/auctionSlice.js","store/index.js","index.js"],"names":["API_URL","process","getAllfactory","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","getAllrating","_callee2","_context2","getAllbrokers","_callee3","_context3","getAllcatalogue","_callee4","_context4","getReportdata","_callee5","_context5","_callee6","_context6","getAllsaleno","_callee7","_context7","saveData","_ref8","_callee8","accounts","_context8","post","adata","_x","apply","arguments","updateData","_ref9","_callee9","_context9","put","_x2","updateSold","_ref10","_callee10","_context10","_x3","selectData","_ref11","_callee11","props","_context11","id","_x4","selectunsoldData","_ref12","_callee12","_context12","_x5","deleteData","_ref13","_callee13","_context13","_x6","catalogueSlice","createSlice","name","initialState","loading","accounts_data","catalogue_data","factory_list","brokersr_list","rating_list","catalogue_list","report_list","sale_list","status","error","edit","unsold","refresh","extraReducers","_extraReducers","_defineProperty","fulfilled","state","action","payload","pending","rejected","_objectDestructuringEmpty","actions","catalogueReducer","reducer","signupUser","_ref2","_ref","reject","loginDetails","then","loginUser","_ref4","_ref3","message","swal","title","text","icon","timer","button","localStorage","setItem","JSON","stringify","result","sessionStorage","token","getuser","loginReducer","_ref6","headers","Authorization","t0","console","user_data","menuItems","to","iconClassName","roles","SideMenu","location","useLocation","history","useNavigate","_useState","useState","_useState2","_slicedToArray","inactive","setInactive","_useState3","_useState4","mobile","setMobile","_useState5","_useState6","isOpen","handleSignout","removeItem","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","usersString","getItem","type","parse","filteredMenuItems","filter","menuItem","includes","document","querySelectorAll","forEach","el","classList","remove","onCollapse","_jsxs","_Fragment","children","className","_jsx","FaStream","onClick","map","index","isActive","pathname","disabled","Link","tableCount","OpenHTMLButton","user","saledetails","categories","_toConsumableArray","Set","item","factory_name","invoices","tableHTML","season","sale_no","category","invoice","categoryData","length","totalSales","totalPkgs","totalinvSales","lot","grade","net_weight","pkgs","gross_total","Number","totalkg","open","body","innerHTML","generateCategoryTable","fdprocessedid","CatalogueList","log","total","reduce","sum","toFixed","nettotal","html","warehouse_name","price","sample_c","join","write","generateTable","AuctionReport","maximum_bid","buyer_name","sold_status","SoldReport","totalAmount","decimalTotalamount","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","decimalVatamount","Date","toLocaleString","buyer_full_name","tableLimit","rowsPerTable","timestamp","numRows","Math","ceil","i","j","start","end","tableData","slice","k","rowData","lastRow","numCells","Object","keys","acc","val","ValuationReport","InvoiceGenerate","sqlData","buyerData","buyer","summaryTotals","product","vat","grandTotal","sale","invoicesHtmlArray","totalInvoices","groupBuyerData","invoicesHtml","buyerFullName","invoiceContent","date","prompt_date","push","htmlContent","newWindow","close","TestingReport","groupedData","createHtmlData","factoryName","factoryData","grossTotal","lrating_name","lirating_name","groupFactoryNames","AuctionSummaryBuyer","totalLeafPkgs","totalLeafKg","setTotalLeafKg","totalDustPkgs","_useState7","_useState8","totalDustKg","setTotalDustKg","_useState9","_useState10","totalSupplementPkgs","_useState11","_useState12","totalSupplementKg","setTotalSupplementKg","_useState13","_useState14","setTotalAmount","_useState15","_useState16","totalAvgAmount","setTotalAvgAmount","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","leaf","kg","amount","dust","supplement","err","e","f","groupAndCalculate","dataAsHtml","_groupedData$buyer_fu","avgAmount","FactorywiseSummary","offeredKg","soldKg","unsoldKg","totalTk","count","parseFloat","factory","totalOfferedKg","averagePrice","soldPercentage","values","FactorySold","soldData","factorySoldPkgs","factorySoldKg","factoryTotalAmount","factoryAvgPrice","BrokersSummary","brokersData","entry","_brokersData$brokers_","_brokersData$brokers_2","_brokersData$brokers_3","_brokersData$brokers_4","_brokersData$brokers_5","_brokersData$brokers_6","brokers_name","totalLots","soldLots","totalVAT","brokerName","broker","cur","BiddersoldReport","filteredData","reportData","average","avg","parseInt","totalTotal","totalVat","reportAsHtml","totalAmountForBroker","totalVatForBroker","totalTotalForBroker","ReportAll","dispatch","useDispatch","users","selectedBrokers","setSelectedBrokers","selectSell","setSelectSell","selectedBrokersname","setSelectedBrokersname","selectedDataArray","setSelectedDataArray","setType","_useSelector","useSelector","catalogue","catList","useMemo","brokers","getFullYear","sort","a","b","soldList","bidderReportdata","link_id","sortedData5","sortedData6","toLowerCase","sortedData","sortedData2","sortedData3","onChange","target","selectedData","find","required","selectedOption","shead","autoComplete","Dashboard","lazy","Login","Catalogue","Bidders","Auction","Association","DemoCard","UnsoldItem","Profile","ChangePassword","CountDown","Signup","App","showSidebar","Suspense","fallback","Routes","Route","exact","path","element","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getCatalouge","getAccounts","getAllsell","getAllside","getAlllc","getLcproduct","getLcsellvehicle","getDataSlice","catalouge","account_list","alldata_list","alltran_list","side_list","lc_list","lc_product","lc_sellvehicle","getdataReducer","_ref5","getAuctiondetails","auctionSlice","auction_data","reducers","increament","dec","_auctionSlice$actions","auctionReducer","store","configureStore","login","getdata","auction","ReactDOM","render","React","StrictMode","Router","Provider","getElementById"],"mappings":"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","file":"static/js/main.4ee6933e.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  accounts_data: [],\r\n  catalogue_data:[],\r\n  factory_list: [],\r\n  brokersr_list: [],\r\n  rating_list: [],\r\n  catalogue_list: [],\r\n  report_list: [],\r\n  sale_list: [],\r\n  status: \"idle\",\r\n  error: false,\r\n  edit:false,\r\n  unsold:false,\r\n  refresh:false,\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const getAllfactory = createAsyncThunk(\"auction/getfactory\", async () => {\r\n  const response = await axios.get(`${API_URL}/getfactory`);\r\n  return response.data;\r\n  \r\n});\r\nexport const getAllrating = createAsyncThunk(\"auction/getrating\", async () => {\r\n  const response = await axios.get(`${API_URL}/getrating`);\r\n  return response.data;\r\n  \r\n});\r\nexport const getAllbrokers = createAsyncThunk(\"auction/getallbrokers\", async () => {\r\n  const response = await axios.get(`${API_URL}/getallbrokers`);\r\n  return response.data;\r\n  \r\n});\r\nexport const getAllcatalogue = createAsyncThunk(\"auction/getallcatalogue\", async () => {\r\n  const response = await axios.get(`${API_URL}/catalouge`);\r\n  return response.data;\r\n  \r\n});\r\n\r\nexport const getAllwarehouse = createAsyncThunk(\"auction/getgarden\", async () => {\r\n  const response = await axios.get(`${API_URL}/getgarden`);\r\n  return response.data;\r\n});\r\n\r\n\r\nexport const getReportdata= createAsyncThunk(\"auction/getallreport\", async () => {\r\n  const response = await axios.get(`${API_URL}/reportdata`);\r\n  return response.data;\r\n  \r\n});\r\nexport const getAllsaleno= createAsyncThunk(\"auction/getallsale\", async () => {\r\n  const response = await axios.get(`${API_URL}/saleno`);\r\n  return response.data;\r\n  \r\n});\r\nexport const saveData = createAsyncThunk(\"auction/createcatalogue\", async (accounts) => {\r\n  const response = await axios.post(`${API_URL}/createcatalogue`, {\r\n    adata: accounts\r\n  });\r\n  return response.data;\r\n \r\n});\r\n\r\nexport const updateData = createAsyncThunk(\"auction/updatedata\", async (accounts) => {\r\n//  console.log(lcpCart);\r\n  const response = await axios.put(`${API_URL}/updatecataloguedata`, {\r\n    adata: accounts,\r\n  });\r\n  return response.data;\r\n});\r\nexport const updateSold = createAsyncThunk(\"auction/updatesold\", async (accounts) => {\r\n  //  console.log(lcpCart);\r\n    const response = await axios.put(`${API_URL}/updatesold`, {\r\n      adata: accounts,\r\n    });\r\n    return response.data;\r\n  });\r\n\r\nexport const selectData = createAsyncThunk(\"auction/selectdata\", async (props) => {\r\n  const response= await axios.put(`${API_URL}/selectcatalogue`,{\r\n    id: props,\r\n  });\r\n    return response.data;\r\n  });\r\n\r\n  export const selectunsoldData = createAsyncThunk(\"auction/selectusdata\", async (props) => {\r\n    const response= await axios.put(`${API_URL}/selectcatalogue`,{\r\n      id: props,\r\n    });\r\n      return response.data;\r\n    });\r\n  export const deleteData = createAsyncThunk(\"auction/deletedata\", async (props) => {\r\n \r\n    const response =axios.put(`${API_URL}/deletecatalogue`,{\r\n      id: props,\r\n    })\r\n    return response.data;\r\n      \r\n    });\r\n \r\n    \r\nconst catalogueSlice = createSlice({\r\n  name: \"catalogue\",\r\n  initialState,\r\n  extraReducers: {\r\n    [getAllsaleno.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.sale_list=payload;\r\n      // state.edit=true;\r\n    },\r\n    [getReportdata.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.report_list=payload;\r\n\r\n      // state.edit=true;\r\n    },\r\n    [getAllcatalogue.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.catalogue_list=payload;\r\n\r\n      // state.edit=true;\r\n    },\r\n    [getAllbrokers.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.brokersr_list = payload;\r\n      // state.edit=true;\r\n    },\r\n    [getAllfactory.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.factory_list = payload;\r\n      // state.edit=true;\r\n    },\r\n    [getAllrating.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.rating_list = payload;\r\n      // state.edit=true;\r\n    },\r\n    [saveData.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n   \r\n    [saveData.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [updateData.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n    [updateData.fulfilled]: (state) => {\r\n      state.edit=false;\r\n      \r\n    },\r\n    [updateData.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [updateSold.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n    [updateSold.fulfilled]: (state) => {\r\n      state.unsold=false;\r\n      \r\n    },\r\n    [updateSold.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [selectData.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.catalogue_data = payload;\r\n      state.edit=true;\r\n    },\r\n    [selectunsoldData.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.catalogue_data = payload;\r\n      state.unsold=true;\r\n    },\r\n    [deleteData.pending]: (state) => {\r\n      state.refresh=false;\r\n    },\r\n    [deleteData.fulfilled]: (state) => {\r\n      state.refresh=true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {} = catalogueSlice.actions;\r\nconst catalogueReducer = catalogueSlice.reducer;\r\n\r\nexport default catalogueReducer;\r\n","import { createSlice ,createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nconst initialState = { loading: false, user_data: [],status: 'idle',\r\nerror: false,};\r\n\r\n\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\nexport const signupUser = createAsyncThunk(\"signup\", async ({loginDetails},reject) => {\r\n  await axios.post(`${API_URL}/signup`,{\r\n      loginDetails: loginDetails,\r\n    }).then((response) => {\r\n    // console.log(response);\r\n    });\r\n    // return response\r\n  });\r\n\r\n\r\nexport const loginUser = createAsyncThunk(\"login\", async ({loginDetails},reject) => {\r\n\r\nawait axios.post(`${API_URL}/login`,{\r\n    loginDetails: loginDetails,\r\n  }).then((response) => {\r\n    \r\n    if (response.data.message) {\r\n      swal({\r\n        title: \"Error!\",\r\n        text: response.data.message,\r\n        icon: \"warning\",\r\n        timer: 2500,\r\n        button: false\r\n      })\r\n      return reject();\r\n    } else {\r\n          swal({\r\n      title: \"Done!\",\r\n      text: \"Your are successfully logged in!!\",\r\n      icon: \"success\",\r\n      timer: 2500,\r\n      button: false\r\n    })\r\n    // return response\r\n    //  console.log(response.data[0]);\r\n    // console.log(response.data);\r\n    localStorage.setItem(\"users\", JSON.stringify(response.data.result[0]));\r\n    sessionStorage.setItem(\"token\",response.data.token);\r\n    sessionStorage.setItem(\"users\", JSON.stringify(response.data.result[0]));\r\n    localStorage.setItem(\"authKey\", JSON.stringify('itp23'));\r\n       return response.data[0];\r\n    }\r\n  });\r\n  // return response\r\n});\r\n\r\nexport const getuser = createAsyncThunk(\"getlogin\", async () => {\r\n  const response = await axios.get(`${API_URL}/login`)\r\n  return response.data;\r\n});\r\n\r\nexport const verifyToken = createAsyncThunk(\"verify\", async (token, reject) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/verify`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying token:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\n\r\nconst loginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  extraReducers:{\r\n    [loginUser.pending]:(state,action)=>{\r\n        state.loading=true\r\n        state.error=false;\r\n    },\r\n    [loginUser.fulfilled]:(state,action)=>{\r\n      const { payload } = action;\r\n      state.loading=false;\r\n      state.user_data=payload;\r\n      state.status=payload;\r\n      state.error=false;\r\n  },\r\n  [getuser.fulfilled]:(state,action)=>{\r\n    const { payload } = action;\r\n    state.loading=false;\r\n    // state.user_data=payload;\r\n    state.status=payload;\r\n    state.error=false;\r\n},\r\n\r\n  [loginUser.rejected]: (state) => {\r\n    state.error = true\r\n  },\r\n\r\n}\r\n});\r\n\r\n// export const { } = loginSlice.actions;\r\nconst loginReducer = loginSlice.reducer;\r\n\r\nexport default loginReducer;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { FaStream } from \"react-icons/fa\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\r\n\r\nexport const menuItems = [\r\n  {\r\n    name: \"Dashboard\",\r\n    to: \"/dashboard\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BROKERS\", \"BIDDER\", \"ASSOCIATION\", \"WAREHOUSE\", \"TBOARD\"],\r\n  },\r\n  {\r\n    name: \"Catalogue\",\r\n    to: \"/catalogue\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BROKERS\"],\r\n  },\r\n  {\r\n    name: \"Unsold Item\",\r\n    to: \"/unsold\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BROKERS\"],\r\n  },\r\n  {\r\n    name: \"Auction\",\r\n    to: \"/auction\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BROKERS\", \"ASSOCIATION\", \"WAREHOUSE\", \"TBOARD\"],\r\n  },\r\n  {\r\n    name: \"Association\",\r\n    to: \"/association\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"ASSOCIATION\"],\r\n  },\r\n  {\r\n    name: \"Bidder\",\r\n    to: \"/bidders\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BIDDER\", \"ASSOCIATION\", \"WAREHOUSE\", \"TBOARD\"],\r\n  },\r\n  {\r\n    name: \"Reports\",\r\n    to: \"/reportall\",\r\n    iconClassName: \"bi bi-speedometer2\",\r\n    roles: [\"BROKERS\", \"BIDDER\", \"ASSOCIATION\", \"WAREHOUSE\", \"TBOARD\"],\r\n  },\r\n];\r\n\r\nconst SideMenu = (props) => {\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n  const [inactive, setInactive] = useState(true);\r\n  const [mobile, setMobile] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSignout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    history(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 720) {\r\n        setInactive(true);\r\n        setMobile(true);\r\n      } else {\r\n        setInactive(false);\r\n        setMobile(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  // const sidebarRef = useRef();\r\n\r\n  // useEffect(() => {\r\n  //   function handleClickOutside(event) {\r\n  //     if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {\r\n  //     }\r\n  //   }\r\n\r\n  //   document.body.addEventListener(\"click\", handleClickOutside);\r\n\r\n  //   return () => {\r\n  //     document.body.removeEventListener(\"click\", handleClickOutside);\r\n  //   };\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (inactive) {\r\n  //     removeActiveClassFromSubMenu();\r\n  //   }\r\n  // }, [inactive]);\r\n\r\n  const removeActiveClassFromSubMenu = () => {\r\n    document.querySelectorAll(\".sub-menu\").forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n  };\r\n\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const usersd = JSON.parse(usersString);\r\n  const type = usersd.type;\r\n  const filteredMenuItems = menuItems.filter((menuItem) =>\r\n    menuItem.roles.includes(type)\r\n  );\r\n\r\n  const handleMenuItemClick = (to) => {\r\n    if (location.pathname === to) {\r\n      return;\r\n    }\r\n\r\n    history(to);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      // window.scrollTo(0, 0);\r\n      if (window.innerWidth < 720) {\r\n        setInactive(true);\r\n      } else {\r\n        setInactive(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inactive) {\r\n      removeActiveClassFromSubMenu();\r\n    }\r\n\r\n    props.onCollapse(inactive);\r\n  }, [inactive]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"topbar\">\r\n        <div className={inactive ? \"topbar-left lcoll\" : \"topbar-left\"}>\r\n          <div className=\"\">\r\n            {/* <img className=\"avatar\" src={logo} alt=\"webscript\" /> */}\r\n          </div>\r\n          {inactive ? (\r\n            <span className=\"tlogoh\">E</span>\r\n          ) : (\r\n            <span className=\"tlogoh\">E-Auction</span>\r\n          )}\r\n        </div>\r\n\r\n        <nav className={inactive ? \"navbar-custom rcoll\" : \"navbar-custom\"}>\r\n          <div className=\"hamburger\">\r\n            <FaStream onClick={() => setInactive(!inactive)} />\r\n          </div>\r\n          <div className=\"top-right\">\r\n            <div className=\"profile\">\r\n              <i className=\"avatar bi bi-person-circle bg-green\"></i>\r\n            </div>\r\n            <div className=\"profile\">\r\n              <i className=\"avatar bi bi-bell bg-blue\"></i>\r\n            </div>\r\n            <div className=\"profile\" onClick={handleSignout}>\r\n              <i className=\"avatar bi bi-box-arrow-left bg-red\"></i>\r\n              {isOpen && (\r\n                <div className=\"dropdown-menu mt-5\">\r\n                  <h1>kkkkk</h1>\r\n                  <h1>kkkkk</h1>\r\n                  <button onClick={handleSignout}>Sign out</button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n      <div id=\"side\" className={`side-menu ${inactive ? \"inactive\" : \"\"}`}>\r\n        <div\r\n          className={` ${mobile && inactive ? \"main-menu-m\" : \"main-menu\"}`}\r\n          id=\"m-menu\"\r\n         >\r\n          {/* {mobile && !inactive &&  (\r\n          <button className=\"cross-button\" onClick={() => setInactive(!inactive)}>\r\n            {inactive ? <FaStream /> : <FiX />}\r\n          </button>\r\n          )} */}\r\n\r\n          <ul>\r\n            {filteredMenuItems.map((menuItem, index) => {\r\n              const isActive = menuItem.to === location.pathname;\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={isActive ? \"disabled\" : \"\"}\r\n                  disabled={isActive ? \"disabled\" : \"\"}\r\n                >\r\n                  <Link\r\n                    to={menuItem.to}\r\n                    className=\"menu-item\"\r\n                    onClick={() => handleMenuItemClick(menuItem.to)}\r\n                  >\r\n                    <div className=\"menu-icon\">\r\n                      <i className={menuItem.iconClassName}></i>\r\n                    </div>\r\n                    <span>{menuItem.name}</span>\r\n                    <div className=\"ripple-container\"></div>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from \"react\";\r\n    // const storedValue = localStorage.getItem(\"isVisible\");\r\n    // const str = JSON.parse(storedValue);\r\n    // console.log(typeof(str));\r\nlet tableCount = 1;\r\n\r\nfunction generateCategoryTable(data,user,saledetails) {\r\n\r\n  const categories = [...new Set(data.map(item => item.factory_name))];\r\n  const invoices = [...new Set(data.map(item => item.factory_name))];\r\n\r\n  let tableHTML = '';\r\ntableHTML=` <html>\r\n<title>Catalogue</title>\r\n<link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <style>\r\n  table {\r\n    border-collapse: collapse;\r\n   \r\n  }\r\n  \r\n  td {\r\n    width: 150px;\r\n    padding: 5px;\r\n    border: none;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: black;\r\n  }\r\n  \r\n    .table-wrapper {\r\n        margin: 0 auto;\r\n        width: 900px;\r\n        padding: 20px;\r\n        background-color: #ffffff;\r\n        \r\n    \r\n    }\r\n    td.top-border {\r\n      border-top: 2px solid black;\r\n    }\r\n    \r\n    td.bottom-lines {\r\n      position: relative;\r\n    }\r\n    \r\n    td.bottom-lines::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: -1px;\r\n      left: 0;\r\n      width: 100%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    td.bottom-lines::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      bottom: -3px;\r\n      left: 0;\r\n      width: 100%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    \r\n    \r\n    #t-header .h1{\r\n      padding:0px;\r\n    }\r\n    .brokers-n{\r\n      padding:0px;\r\n      text-align:center;\r\n    }\r\n    .season{\r\n      text-align:center;\r\n\r\n    }\r\n    .tbl-data{\r\n      display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n    }\r\n    .factory-name{\r\n      text-align:center;\r\n    }\r\n    \r\n    body{\r\n      font-family: 'Courier New', Courier, monospace;\r\n      color: #000;\r\nbackground: #ededed;\r\nfont-size: 12px;\r\n    }\r\n\r\n    @media print {\r\n        body * {\r\n          visibility: hidden;\r\n        }\r\n        .table-wrapper, .table-wrapper * {\r\n          visibility: visible;\r\n        }\r\n\r\n        .header-print {\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            padding: 10px;\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            text-align: center;\r\n            width: 100%;\r\n          }\r\n      \r\n      }\r\n      .header {\r\n         \r\n        padding: 10px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    /* Icon in the first row */\r\n    .icon {\r\n        width: 60px;\r\n        height: 60px;\r\n           }\r\n\r\n    /* Span Container */\r\n    .span-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center; /* Center the container horizontally */\r\n    }\r\n\r\n    /* Individual Spans */\r\n    .span1, .span2, .span3 {\r\n        padding: 2px 10px;\r\n        text-align: center;\r\n    }\r\n\r\n    .span1 {\r\n        font-size: 26px;\r\n        font-weight:bold;\r\n    }\r\n\r\n    .span2, .span3 {\r\n        font-size: 14px;\r\n    }\r\n\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"print-btn\" style=\"position: fixed; top: 0; left: 0; padding: 10px; background-color: white;\">\r\n    <button id=\"print-button\" onclick=\"window.print()\">Print</button>\r\n    <button onclick=\"window.close()\">Close</button>\r\n  </div>\r\n  \r\n  <div class=\"table-wrapper\">\r\n           \r\n  <div class=\"header\">\r\n  <!-- Icon in the first row -->\r\n  <div class=\"icon\">\r\n \r\n  </div>\r\n\r\n  <!-- Span Container -->\r\n  <div class=\"span-container\">\r\n      <span class=\"span1\">${user}</span>\r\n      <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n      <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n  </div>\r\n  <div></div>\r\n</div>\r\n  <hr style=\"border-top: 1px dotted #ccc;\">\r\n</div>\r\n</div>\r\n  `\r\n   categories.forEach(category => {\r\n    invoices.forEach(invoice => {\r\n      const categoryData = data.filter(item => item.factory_name === category && item.factory_name === invoice);\r\n\r\n      if (categoryData.length > 0) {\r\n        let totalSales = 0;\r\n        let totalPkgs = 0;\r\nlet totalinvSales = 0;\r\n        tableHTML += `\r\n         \r\n              \r\n              <div class=\"table-wrapper\">\r\n           \r\n                <h2 class=\"factory-name\">FACTORY: ${category} </h2>\r\n                <div class=\"tbl-data\">\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Sl</th>\r\n                      <th>Lot</th>\r\n                      <th>Grade</th>\r\n                      <th>Weight/bag</th>\r\n                      <th>Pkg</th>\r\n                      <th>Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n        `;\r\n\r\n        categoryData.forEach((item, index) => {\r\n          tableHTML += `\r\n            <tr>\r\n              <td>${index + 1}</td>\r\n              <td>${item.lot}</td>\r\n              <td>${item.grade}</td>\r\n              <td>${item.net_weight}</td>\r\n              <td>${item.pkgs}</td>\r\n              <td>${item.gross_total}</td>\r\n            \r\n            </tr>\r\n          `;\r\n\r\n          totalSales += Number(item.gross_total);\r\n          totalinvSales += Number(item.totalkg);\r\n          totalPkgs += Number(item.pkgs);\r\n        });\r\n\r\n        tableHTML += `\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr>\r\n                    <th>INV KG ${totalinvSales}</th>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td class=\"top-border bottom-lines\">${totalPkgs} Pkg</td>\r\n                      <td class=\"top-border bottom-lines\">${totalSales} Kg</td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n                </div>\r\n                <caption> ${tableCount}</caption>\r\n              </div>\r\n              <script>\r\n                function printTable() {\r\n                  window.print();\r\n                }\r\n              </script>\r\n            </body>\r\n          </html>\r\n        `;\r\n\r\n        tableCount++;\r\n      }\r\n    });\r\n  });\r\n\r\n  const newTab = window.open('', '_blank');\r\n  newTab.document.body.innerHTML = tableHTML;\r\n\r\n\r\n}\r\n\r\nconst OpenHTMLButton = ({ data,user ,saledetails}) => {\r\n  const handleClick = () => {\r\n    generateCategoryTable(data,user,saledetails)\r\n  };\r\n\r\n\r\n  return<button className=\"btn btn-primary w-100 mb-2 d-flex justify-content-between align-items-center\"  onClick={handleClick} fdprocessedid=\"z00614\">\r\n  <span className=\"text-center mx-auto\">Catalouge</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n</button>\r\n\r\n};\r\n\r\nexport default OpenHTMLButton;\r\n","import React from \"react\";\r\n\r\nfunction generateTable(data,user,saledetails) {\r\n  console.log(user);\r\n  const total = data.reduce((sum, { totalkg }) => sum + Number(totalkg), 0).toFixed(2); ;\r\n  const nettotal = data.reduce((sum, { gross_total }) => sum + Number(gross_total), 0).toFixed(2); ;\r\n  const html = `\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n        <th>SL</th>\r\n          <th>LOT</th>\r\n          <th>INVOICE</th>\r\n          <th>FACTORY</th>\r\n          <th>Warehouse</th>\r\n          <th>GRADE</th>\r\n          <th>NET.W</th>\r\n          <th>PKG</th>\r\n          <th>GROSS TOTAL</th>\r\n          <th>SAMPLE</th>\r\n          <th>NET TOTAL</th>\r\n          <th>VALUE</th>\r\n          <th>CATEGORY</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${data.map(({ lot, invoice, factory_name,warehouse_name,grade,net_weight,pkgs,totalkg,price,category,sample_c,gross_total },index) => `\r\n          <tr>\r\n          <td>${index+1}</td>\r\n            <td>${lot}</td>\r\n            <td>${invoice}</td>\r\n            <td>${factory_name}</td>\r\n            <td>${warehouse_name}</td>\r\n            <td>${grade}</td>\r\n            <td>${net_weight}</td>\r\n            <td>${pkgs}</td>\r\n            <td>${totalkg}</td>\r\n            <td>${sample_c}</td>\r\n            <td>${gross_total}</td>\r\n            <td>${price}</td>\r\n            <td>${category}</td>\r\n          </tr>\r\n        `).join('')}\r\n      </tbody>\r\n      <tfoot>\r\n      <tr>\r\n        <td colspan=\"8\"></td>\r\n        <td>${total} KG</td>\r\n        <td></td>\r\n        <td>${nettotal} KG</td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </tfoot>\r\n    </table>\r\n  `;\r\n\r\n  const newWindow = window.open('');\r\n  newWindow.document.write(`\r\n    <html>\r\n      <head>\r\n        <title>List</title>\r\n        <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n        <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 1200px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n          \r\n      \r\n      }\r\n      body{\r\n        font-family: 'Courier New', Courier, monospace;\r\n        color: #37474F;\r\n  background: #757677;\r\n  font-size: 12px;\r\n      }\r\n          table {\r\n            margin: 0 auto;\r\n\r\n            border-collapse: collapse;\r\n           \r\n          }\r\n          th, td {\r\n            padding: 5px;\r\n            border: 1px solid black;\r\n          }\r\n          td {\r\n            white-space: nowrap;\r\n          }\r\n          .header {\r\n         \r\n            padding: 10px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        /* Icon in the first row */\r\n        .icon {\r\n            width: 60px;\r\n            height: 60px;\r\n               }\r\n\r\n        /* Span Container */\r\n        .span-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center; /* Center the container horizontally */\r\n        }\r\n\r\n        /* Individual Spans */\r\n        .span1, .span2, .span3 {\r\n            padding: 2px 10px;\r\n            text-align: center;\r\n        }\r\n\r\n        .span1 {\r\n            font-size: 26px;\r\n            font-weight:bold;\r\n        }\r\n\r\n        .span2, .span3 {\r\n            font-size: 14px;\r\n        }\r\n        </style>\r\n      </head>\r\n      <body>\r\n      <div class=\"table-wrapper\">\r\n      <div class=\"header\">\r\n      <!-- Icon in the first row -->\r\n      <div class=\"icon\">\r\n      <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n      </div>\r\n\r\n      <!-- Span Container -->\r\n      <div class=\"span-container\">\r\n          <span class=\"span1\">${user}</span>\r\n          <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n          <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n      </div>\r\n      <div></div>\r\n  </div>\r\n          <hr>\r\n        ${html}\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `);\r\n}\r\n\r\nconst CatalogueList = ({ data,user,saledetails }) => {\r\n  const handleClick = () => {\r\n    generateTable(data,user,saledetails)\r\n  };\r\n\r\n  return <button className=\"btn btn-primary mb-2 w-100 text-center\" onClick={handleClick}>List</button>;\r\n};\r\n\r\nexport default CatalogueList;\r\n","import React from \"react\";\r\n\r\nfunction generateTable(data,user,saledetails) {\r\n  const total = data.reduce((sum, { gross_total }) => sum + Number(gross_total), 0);\r\n  const html = `\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n        <th>SL</th>\r\n          <th>LOT</th>\r\n          <th>INVOICE</th>\r\n          <th>FACTORY</th>\r\n          <th>Warehouse</th>\r\n          <th>GRADE</th>\r\n          <th>NET.W</th>\r\n          <th>PKG</th>\r\n          <th>TOTAL</th>\r\n          <th>VALUE</th>\r\n          <th>M.VALUE</th>\r\n          <th>BIDDER</th>\r\n          <th>STATUS</th>\r\n          <th>CATEGORY</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${data.map(({ lot, invoice, factory_name,warehouse_name,grade,net_weight,pkgs,totalkg,gross_total,price,maximum_bid,buyer_name,category,sold_status },index) => `\r\n          <tr>\r\n          <td>${index+1}</td>\r\n            <td>${lot}</td>\r\n            <td>${invoice}</td>\r\n            <td>${factory_name}</td>\r\n            <td>${warehouse_name}</td>\r\n            <td>${grade}</td>\r\n            <td>${net_weight}</td>\r\n            <td>${pkgs}</td>\r\n            <td>${gross_total}</td>\r\n            <td>${price}</td>\r\n            <td>${maximum_bid}</td>\r\n            <td>${buyer_name}</td>\r\n            <td>${sold_status===1?'SOLD':'UNSOLD'}</td>\r\n            <td>${category}</td>\r\n          </tr>\r\n        `).join('')}\r\n      </tbody>\r\n      <tfoot>\r\n      <tr>\r\n        <td colspan=\"8\"></td>\r\n        <td>${total}</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </tfoot>\r\n    </table>\r\n  `;\r\n\r\n  const newWindow = window.open('');\r\n  newWindow.document.write(`\r\n    <html>\r\n      <head>\r\n        <title>Auction Report</title>\r\n        <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n        <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 1150px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n          \r\n      \r\n      }\r\n      body{\r\n        font-family: 'Courier New', Courier, monospace;\r\n        color: #37474F;\r\n  background: #757677;\r\n  font-size: 12px;\r\n      }\r\n          table {\r\n            margin: 0 auto;\r\n            border-collapse: collapse;\r\n          }\r\n          th, td {\r\n            padding: 5px;\r\n            border: 1px solid black;\r\n          }\r\n          td {\r\n            white-space: nowrap;\r\n          }\r\n          .header {\r\n            padding: 10px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n\r\n        /* Icon in the first row */\r\n        .icon {\r\n            width: 60px;\r\n            height: 60px;\r\n               }\r\n\r\n        /* Span Container */\r\n        .span-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center; /* Center the container horizontally */\r\n        }\r\n\r\n        /* Individual Spans */\r\n        .span1, .span2, .span3 {\r\n            padding: 2px 10px;\r\n            text-align: center;\r\n        }\r\n\r\n        .span1 {\r\n            font-size: 26px;\r\n            font-weight:bold;\r\n        }\r\n\r\n        .span2, .span3 {\r\n            font-size: 14px;\r\n        }\r\n        </style>\r\n      </head>\r\n      <body>\r\n      <div class=\"table-wrapper\">\r\n      <div class=\"header\">\r\n      <!-- Icon in the first row -->\r\n      <div class=\"icon\">\r\n      <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n      </div>\r\n\r\n      <!-- Span Container -->\r\n      <div class=\"span-container\">\r\n          <span class=\"span1\">${user}</span>\r\n          <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n          <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n      </div>\r\n      <div></div>\r\n  </div>\r\n          <hr>\r\n        ${html}\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `);\r\n}\r\n\r\nconst AuctionReport = ({ data ,user,saledetails}) => {\r\n  const handleClick = () => {\r\n    generateTable(data,user,saledetails)\r\n  };\r\n\r\n  return <button className=\"btn btn-primary w-100 text-center mb-2\" onClick={handleClick}>Auction Report\r\n   {/* <span className=\"icon\">&#x1F512;</span> */}\r\n  </button>;\r\n};\r\n\r\nexport default AuctionReport;\r\n","import React from \"react\";\r\n\r\nfunction generateTable(data, user,saledetails) {\r\n  const total = data.reduce((sum, { gross_total }) => sum + Number(gross_total), 0);\r\n  const totalAmount = data.reduce(\r\n    (sum, { gross_total, maximum_bid }) => sum + gross_total * maximum_bid,\r\n    0\r\n  );\r\n  const decimalTotalamount = new Intl.NumberFormat(\"en-IN\", {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  }).format(totalAmount);\r\n  const decimalVatamount = new Intl.NumberFormat(\"en-IN\", {\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  }).format(totalAmount*15/100);\r\n  const timestamp = new Date().toLocaleString();\r\n  const html = `\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"align-center\">SL</th>\r\n          <th class=\"align-center\">LOT</th>\r\n          <th class=\"align-center\">INVOICE</th>\r\n          <th class=\"align-center\">FACTORY</th>\r\n          <th class=\"align-center\">Warehouse</th>\r\n          <th class=\"align-center\">GRADE</th>\r\n          <th class=\"align-right\">NET.W</th>\r\n          <th class=\"align-right\">PKG</th>\r\n          <th class=\"align-right\">TOTAL</th>\r\n          <th class=\"align-right\">VALUE</th>\r\n          <th class=\"align-right\">M.VALUE</th>\r\n          <th class=\"align-right\">AMOUNT</th>\r\n          <th class=\"align-right\">VAT (15%)</th>\r\n          <th class=\"align-center\">BIDDER</th>\r\n          <th class=\"align-center\">CATEGORY</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        ${data\r\n          .map(\r\n            (\r\n              {\r\n                lot,\r\n                invoice,\r\n                factory_name,\r\n                gross_total,\r\n                warehouse_name,\r\n                grade,\r\n                net_weight,\r\n                pkgs,\r\n                totalkg,\r\n                price,\r\n                maximum_bid,\r\n                buyer_name,\r\n                category,\r\n                sold_status,\r\n                buyer_full_name\r\n              },\r\n              index\r\n            ) => `\r\n          <tr>\r\n            <td class=\"align-center\">${index + 1}</td>\r\n            <td class=\"align-center\">${lot}</td>\r\n            <td class=\"align-center\">${invoice}</td>\r\n            <td class=\"align-center\">${factory_name}</td>\r\n            <td class=\"align-center\">${warehouse_name}</td>\r\n            <td class=\"align-center\">${grade}</td>\r\n            <td class=\"align-right\">${net_weight}</td>\r\n            <td class=\"align-right\">${pkgs}</td>\r\n            <td class=\"align-right\">${gross_total}</td>\r\n            <td class=\"align-right\">${price}</td>\r\n            <td class=\"align-right\">${maximum_bid}</td>\r\n            <td class=\"align-right ${\r\n              maximum_bid > 100 ? \"green-text\" : \"red-text\"\r\n            }\">${new Intl.NumberFormat(\"en-IN\", {\r\n              minimumFractionDigits: 2,\r\n              maximumFractionDigits: 2,\r\n            }).format(gross_total * maximum_bid)}</td>\r\n            <td class=\"align-right ${\r\n              maximum_bid > 100 ? \"green-text\" : \"red-text\"\r\n            }\">${new Intl.NumberFormat(\"en-IN\", {\r\n              minimumFractionDigits: 2,\r\n              maximumFractionDigits: 2,\r\n            }).format(gross_total * maximum_bid * 15/100)}</td>\r\n            <td class=\"align-center\">${buyer_full_name}</td>\r\n            <td class=\"align-center\">${category}</td>\r\n          </tr>\r\n        `\r\n          )\r\n          .join(\"\")}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td colspan=\"8\"></td>\r\n          <td class=\"align-right total\">${total} Kg</td>\r\n          <td></td>\r\n          <td></td>\r\n          <td class=\"align-right total\">${decimalTotalamount}</td>\r\n          <td class=\"align-right total\">${decimalVatamount}</td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  `;\r\n\r\n  const newWindow = window.open(\"\");\r\n  newWindow.document.write(`\r\n    <html>\r\n      <head>\r\n        <title>Sold Rpoert</title>\r\n        <title>List</title>\r\n        <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n        <style>\r\n          .table-wrapper {\r\n            margin: 0 auto;\r\n            width: 1400px;\r\n            padding: 20px;\r\n            background-color: #ffffff;\r\n          }\r\n          body {\r\n            font-family: \"Courier New\", Courier, monospace;\r\n            color: #000;\r\n            background: #757677;\r\n            font-size: 12px;\r\n          }\r\n          table {\r\n            margin: 0 auto;\r\n            border-collapse: collapse;\r\n          }\r\n          th,\r\n          td {\r\n            padding: 5px;\r\n            border: 1px solid black;\r\n            text-align: center;\r\n          }\r\n          th.align-right,\r\n          td.align-right {\r\n            text-align: right;\r\n          }\r\n          .total {\r\n            font-weight:bold;\r\n            color: purple;\r\n          }\r\n          .green-text {\r\n            font-weight:400;\r\n            color: purple;\r\n          }\r\n          .red-text {\r\n            color: red;\r\n          }\r\n          .season{\r\n            display: flex;\r\n            align-items: space-between;\r\n            justify-content: center;\r\n          }\r\n      \r\n        .header {\r\n         \r\n          padding: 10px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n\r\n      /* Icon in the first row */\r\n      .icon {\r\n          width: 60px;\r\n          height: 60px;\r\n             }\r\n\r\n      /* Span Container */\r\n      .span-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center; /* Center the container horizontally */\r\n      }\r\n\r\n      /* Individual Spans */\r\n      .span1, .span2, .span3 {\r\n          padding: 2px 10px;\r\n          text-align: center;\r\n      }\r\n\r\n      .span1 {\r\n          font-size: 26px;\r\n          font-weight:bold;\r\n      }\r\n\r\n      .span2, .span3 {\r\n          font-size: 14px;\r\n      }\r\n      </style>\r\n    </head>\r\n    <body>\r\n    <div class=\"table-wrapper\">\r\n    <div class=\"header\">\r\n    <!-- Icon in the first row -->\r\n    <div class=\"icon\">\r\n    <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n    </div>\r\n\r\n    <!-- Span Container -->\r\n    <div class=\"span-container\">\r\n        <span class=\"span1\">${user}</span>\r\n        <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n        <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n        <hr>\r\n          ${html}\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `);\r\n}\r\n\r\nconst SoldReport = ({ data, user,saledetails }) => {\r\n  const handleClick = () => {\r\n    generateTable(data, user,saledetails);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary mb-2 w-100 d-flex justify-content-between align-items-center\"\r\n      onClick={handleClick}\r\n    >\r\n     \r\n      <span className=\"text-center mx-auto\"> Sold Report</span>\r\n  {/* <span className=\"icon my-auto\">&#x1F512;</span> */}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SoldReport;\r\n","import React from \"react\";\r\n\r\nfunction generateTable(data,user, tableLimit, rowsPerTable,saledetails) {\r\n  const timestamp = new Date().toLocaleString();\r\n  const numRows = Math.ceil(data.length / (tableLimit * rowsPerTable));\r\n  let currentRow = 0;\r\n  let html = '';\r\n  let lastTable = '';\r\n  \r\n  for (let i = 0; i < numRows; i++) {\r\n    currentRow++;\r\n    html += '<div class=\"table-row\">';\r\n\r\n    for (let j = 0; j < tableLimit; j++) {\r\n      const start = i * tableLimit * rowsPerTable + j * rowsPerTable;\r\n      const end = start + rowsPerTable;\r\n      const tableData = data.slice(start, end);\r\n\r\n      if (tableData.length === 0) {\r\n        break;\r\n      }\r\n\r\n      html += '<table class=\"table\">';\r\n      html += '<thead><tr><th>#</th><th>LOT</th><th>VALUE</th></tr></thead>';\r\n      html += '<tbody>';\r\n\r\n      for (let k = 0; k < tableData.length; k++) {\r\n        const rowData = tableData[k];\r\n        html += '<tr>';\r\n        html += `<td>${(i * tableLimit * rowsPerTable) + (j * rowsPerTable) + k + 1}</td>`;\r\n        html += `<td>${rowData.lot}</td>`;\r\n        html += `<td>${rowData.price}</td>`;\r\n        html += '</tr>';\r\n      }\r\n\r\n      // Add empty cells to fill remaining space\r\n      const lastRow = tableData[tableData.length - 1];\r\n      const numCells = Object.keys(lastRow).length;\r\n      if (numCells < 2) {\r\n        for (let k = numCells; k < 2; k++) {\r\n          html += '<td></td>';\r\n        }\r\n      }\r\n\r\n      html += '</tbody>';\r\n      html += '</table>';\r\n\r\n      // Keep track of the last table\r\n      if ((i === numRows - 1) && (j === tableLimit - 1)) {\r\n        lastTable = html;\r\n      }\r\n\r\n      if (j === tableLimit - 1) {\r\n        html += '<br>';\r\n      }\r\n    }\r\n\r\n    html += '</div>';\r\n  }\r\n\r\n  const sum = data.reduce((acc, val) => acc + val.price, 0);\r\n\r\n  const newWindow = window.open('');\r\n  newWindow.document.write(`\r\n    <html>\r\n      <head>\r\n        <title>Valuation Report</title>\r\n        <style>\r\n          .table-wrapper {\r\n            margin: 0 auto;\r\n            width: 800px;\r\n            padding: 20px;\r\n            background-color: #ffffff;\r\n          }\r\n          body {\r\n            font-family: \"Courier New\", Courier, monospace;\r\n            color: #000;\r\n            background: #757677;\r\n            font-size: 12px;\r\n          }\r\n          .table-row {\r\n            align-items: start;\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n          }\r\n          .table {\r\n            margin: 10px;\r\n          }\r\n          .table th,\r\n          .table td {\r\n            padding: 5px;\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"table-wrapper\">\r\n          <div class=\"header\">\r\n          <h1 style=\"text-align:center\">${user}</h1>\r\n            <p style=\"text-align: center;\">Season ${saledetails[0].season}</p>\r\n            <div class=\"season\">\r\n              <span style=\"text-align: center;\">Sale No: ${saledetails[0].sale_no}</span>\r\n              <span style=\"text-align: right;\">Generated on: ${timestamp}</span>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          ${html}\r\n        </div>\r\n      </body>\r\n    </html>\r\n  `);\r\n}\r\n\r\nconst ValuationReport = ({ data,user,saledetails }) => {\r\n  const handleClick = () => {\r\n    generateTable(data,user,saledetails)\r\n  };\r\n\r\n  return <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={() => generateTable(data,user, 6, 30,saledetails)}>\r\n <span className=\"text-center mx-auto\">Valuation</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n  </button>;\r\n};\r\n\r\nexport default ValuationReport;\r\n","import React from 'react';\r\n\r\nconst Invoice = ({ buyer, products, sale }) => {\r\n  const totalQty = products.reduce((total, product) => total + product.qty, 0);\r\n  const totalAmount = products.reduce((total, product) => total + product.qty * product.rate, 0);\r\n  const vat = totalAmount * 0.05;\r\n  const grandTotal = totalAmount + vat;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{buyer} Invoice</h2>\r\n      <p>Sale No: {sale}</p>\r\n      {products.map((product) => (\r\n        <p key={product.id}>\r\n          {product.product} {product.qty} {product.rate} {product.qty * product.rate}\r\n        </p>\r\n      ))}\r\n      <p>Total Quantity: {totalQty}</p>\r\n      <p>Total Amount: {totalAmount}</p>\r\n      <p>VAT: {vat}</p>\r\n      <p>Grand Total: {grandTotal}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InvoiceGenerate = ({ sqlData,user ,saledetails}) => {\r\n  const buyers = [...new Set(sqlData.map((data) => data.buyer))];\r\n  const buyerData = buyers.map((buyer) =>\r\n    sqlData.filter((data) => data.buyer === buyer)\r\n  );\r\n\r\n  const summaryTotals = buyerData.map((data) => {\r\n    const totalAmount = data.reduce((total, product) => total + product.pkgs * product.price, 0);\r\n    const vat = totalAmount * 0.05;\r\n    const grandTotal = totalAmount + vat;\r\n    return { totalAmount, vat, grandTotal, sale: data[0].sale_no };\r\n  });\r\n\r\n  const handleButtonClick = () => {\r\n    const invoicesHtmlArray = [];\r\n    const pageSize = 2; // Number of invoices per page\r\n    const totalInvoices = buyerData.length;\r\n  \r\n    for (let i = 0; i < totalInvoices; i += pageSize) {\r\n      const groupBuyerData = buyerData.slice(i, i + pageSize);\r\n  \r\n      let invoicesHtml = '';\r\n      groupBuyerData.forEach((data, index) => {\r\n        const buyerFullName = data[0].buyer_full_name;\r\n        const invoiceContent = `\r\n          <div style=\"margin-bottom: 45px;\">\r\n          <div class=\"header\">\r\n          <!-- Icon in the first row -->\r\n          <div class=\"icon\">\r\n          <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n          </div>\r\n        \r\n          <!-- Span Container -->\r\n          <div class=\"span-container\">\r\n              <span class=\"span1\">${user}</span>\r\n              <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n              <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n            <hr/>\r\n            <div class=\"head\">\r\n              <div style=\"flex-direction: column;\">\r\n                <p><strong>Buyer:</strong>${buyerFullName}</p>\r\n              </div>\r\n              <div style=\"flex-direction: column-reverse;\">\r\n                <p>Sale Date : ${saledetails[0].date}</p>\r\n                <p>Prompt Date : ${saledetails[0].prompt_date}</p>\r\n             \r\n              </div>\r\n            </div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                <th>LOT</th>\r\n                <th>FACTORY</th>\r\n                <th>INV.</br> NO</th>\r\n                <th>GRADE</th>\r\n                <th>PKGS</th>\r\n                <th>NET </br> KG</th>\r\n                <th>TOTAL </br> KG</th>\r\n                <th>PRICE </br> TAKA</th>\r\n                <th>AMOUNT </br> TAKA</th>\r\n                <th>VAT @ 15% </br> TAKA</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                ${data.map((product) => (\r\n                  `<tr key=${product.id}>\r\n                  <td>${product.lot}</td>\r\n                  <td>${product.factory_name}</td>\r\n                  <td>${product.invoice}</td>\r\n                  <td>${product.grade}</td>\r\n                    <td>${product.pkgs}</td>\r\n                    <td>${product.net_weight}</td>\r\n                    <td>${product.gross_total}</td>\r\n                    <td>${product.price}</td>\r\n                    <td>${new Intl.NumberFormat(\"en-IN\", {\r\n                      minimumFractionDigits: 2,\r\n                      maximumFractionDigits: 2,\r\n                    }).format(product.price * product.gross_total)}</td>\r\n                    <td>${new Intl.NumberFormat(\"en-IN\", {\r\n                      minimumFractionDigits: 2,\r\n                      maximumFractionDigits: 2,\r\n                    }).format(product.price * product.gross_total * 15 /100)}</td>\r\n                  </tr>`\r\n                )).join('')}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colspan=\"2\">Total :</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td>${data.reduce((total, product) => total + product.pkgs, 0)}</td>\r\n                  <td></td>\r\n                  <td>${data.reduce((total, product) => total + Number(product.gross_total), 0)}</td>\r\n                  <td></td>\r\n                  <td>${data.reduce((total, product) => total + product.price * product.gross_total, 0)}</td>\r\n                  <td>${data.reduce((total, product) => total + product.price * product.gross_total *15/100, 0)}</td>\r\n                  </tr>\r\n                <tr>\r\n                  <td colspan=\"2\">Total Amount:</td>\r\n                  <td></td>\r\n                  <td>${data.reduce((total, product) => total + product.price * product.gross_total, 0)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td colspan=\"2\">VAT:</td>\r\n                  <td></td>\r\n                  <td>${data.reduce((total, product) => total + product.price * product.gross_total *15/100, 0)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td colspan=\"2\">Grand Total:</td>\r\n                  <td></td>\r\n                  <td>${summaryTotals[index].grandTotal}</td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        `;\r\n        invoicesHtml += invoiceContent;\r\n      });\r\n  \r\n      invoicesHtmlArray.push(invoicesHtml);\r\n    }\r\n  \r\n    const htmlContent = invoicesHtmlArray.map((invoicesHtml, index) => `\r\n      <html>\r\n      <head>\r\n        <title>Bidder Invoice</title>\r\n        <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n        <style>\r\n          .table-wrapper {\r\n            margin: 0 auto;\r\n            width: 980px;\r\n            padding: 20px;\r\n            background-color: #ffffff;\r\n          }\r\n          body {\r\n            font-family: \"Courier New\", Courier, monospace;\r\n            color: #000;\r\n            background: #757677;\r\n            font-size: 12px;\r\n          }\r\n          .head {\r\n            padding: 0px 50px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n          }\r\n          table {\r\n            width: 940px;\r\n            margin: 0 auto;\r\n            border-collapse: collapse;\r\n          }\r\n          th,\r\n          td {\r\n            padding: 5px;\r\n            border: 1px solid black;\r\n            text-align: center;\r\n          }\r\n          th.align-right,\r\n          td.align-right {\r\n            text-align: right;\r\n          }\r\n          .total {\r\n            font-weight: bold;\r\n            color: purple;\r\n          }\r\n          .green-text {\r\n            font-weight: 400;\r\n            color: purple;\r\n          }\r\n          .red-text {\r\n            color: red;\r\n          }\r\n          .season {\r\n            display: flex;\r\n            align-items: space-between;\r\n            justify-content: center;\r\n          }\r\n          @media print {\r\n            body {\r\n              margin: 0;\r\n              font-size: 10px;\r\n            }\r\n            .table-wrapper {\r\n              page-break-inside: avoid;\r\n            }\r\n          }\r\n          .header {\r\n         \r\n            padding: 10px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n        }\r\n    \r\n        /* Icon in the first row */\r\n        .icon {\r\n            width: 60px;\r\n            height: 60px;\r\n               }\r\n    \r\n        /* Span Container */\r\n        .span-container {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center; /* Center the container horizontally */\r\n        }\r\n    \r\n        /* Individual Spans */\r\n        .span1, .span2, .span3 {\r\n            padding: 2px 10px;\r\n            text-align: center;\r\n        }\r\n    \r\n        .span1 {\r\n            font-size: 26px;\r\n            font-weight:bold;\r\n        }\r\n    \r\n        .span2, .span3 {\r\n            font-size: 14px;\r\n        }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"table-wrapper\">\r\n          ${invoicesHtml}\r\n        </div>\r\n        ${index < invoicesHtmlArray.length - 1 ? '<div style=\"page-break-before: always;\"></div>' : ''}\r\n      </body>\r\n    </html>\r\n    `);\r\n    const newWindow = window.open('', '_blank');\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\n  return (\r\n  \r\n          <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={handleButtonClick}>\r\n   <span className=\"text-center mx-auto\">Bidder Invoice</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n  </button>\r\n    \r\n  );\r\n};\r\n\r\nexport default InvoiceGenerate;\r\n","import React from 'react';\r\n\r\nconst TestingReport = ({ data ,user,saledetails}) => {\r\n  const groupedData = {};\r\n  data.forEach((item) => {\r\n    if (!groupedData[item.factory_name]) {\r\n      groupedData[item.factory_name] = [];\r\n    }\r\n    groupedData[item.factory_name].push(item);\r\n  });\r\n\r\n  const handlePrintButtonClick = () => {\r\n    const invoicesHtmlArray = [];\r\n    const pageSize = 2; // Number of invoices per page\r\n    const totalInvoices = Object.keys(groupedData).length;\r\n\r\n    for (let i = 0; i < totalInvoices; i += pageSize) {\r\n      const groupFactoryNames = Object.keys(groupedData).slice(i, i + pageSize);\r\n\r\n      let invoicesHtml = '';\r\n      groupFactoryNames.forEach((factoryName) => {\r\n        const invoiceContent = createHtmlData(factoryName);\r\n        invoicesHtml += invoiceContent;\r\n      });\r\n\r\n      invoicesHtmlArray.push(invoicesHtml);\r\n    }\r\n\r\n    const htmlContent = invoicesHtmlArray.map((invoicesHtml, index) => `\r\n      <html>\r\n      <head>\r\n        <title>Tasting Report</title>\r\n        <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n        <style>\r\n          .table-wrapper {\r\n            margin: 0 auto;\r\n            width: 900px;\r\n            padding: 20px;\r\n            background-color: #ffffff;\r\n          }\r\n          .tocontainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n          }\r\n          body {\r\n            font-family: \"Courier New\", Courier, monospace;\r\n            color: #000;\r\n            background: #757677;\r\n            font-size: 12px;\r\n          }\r\n          table {\r\n            width: 800px;\r\n            margin: 0 auto;\r\n            border-collapse: collapse;\r\n          }\r\n          th,\r\n          td {\r\n            padding: 5px;\r\n            border: 1px solid black;\r\n            text-align: center;\r\n          }\r\n          th.align-right,\r\n          td.align-right {\r\n            text-align: right;\r\n          }\r\n          .total {\r\n            font-weight: bold;\r\n            color: purple;\r\n          }\r\n          .green-text {\r\n            font-weight: 400;\r\n            color: purple;\r\n          }\r\n          .red-text {\r\n            color: red;\r\n          }\r\n          .season {\r\n            display: flex;\r\n            align-items: space-between;\r\n            justify-content: center;\r\n          }\r\n          @media print {\r\n            body {\r\n              margin: 0;\r\n              font-size: 10px;\r\n            }\r\n            .table-wrapper {\r\n              page-break-inside: avoid;\r\n            }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        <div class=\"table-wrapper\">\r\n          ${invoicesHtml}\r\n        </div>\r\n        ${index < invoicesHtmlArray.length - 1 ? '<div style=\"page-break-before: always;\"></div>' : ''}\r\n      </body>\r\n    </html>\r\n    `);\r\n    const newWindow = window.open('', '_blank');\r\n    newWindow.document.write(htmlContent.join(''));\r\n    newWindow.document.close();\r\n  };\r\n\r\n  const createHtmlData = (factoryName) => {\r\n    const factoryData = groupedData[factoryName];\r\n    let totalPkgs = 0;\r\n    let grossTotal = 0;\r\n    factoryData.forEach((item) => {\r\n      totalPkgs += item.pkgs;\r\n      grossTotal += Number(item.gross_total);\r\n    });\r\n    return `\r\n      <div key=${factoryName} style=\"margin-bottom: 55px;\">\r\n        <div class=\"header\">\r\n        <h2 style=\"text-align: center;\">${user}</h2>\r\n        <h3 style=\"text-align: center;\">Season : ${saledetails[0].season}</h3>\r\n          <div class=\"season\">\r\n            <span style=\"text-align: center;\">Sale No: ${saledetails[0].sale_no}</span>\r\n            <span style=\"text-align: right;\">Generated on: 6</span>\r\n          </div>\r\n          <hr />\r\n          <div class=\"tocontainer\">\r\n            <div><span>To</span></div>\r\n            <div><span>Manager</span></div>\r\n            <div style=\"text-align: right;\">${factoryName}</div>\r\n          </div>\r\n          <h2 style=\"text-align:center\">${factoryName}</h2>\r\n          <div class=\"tocontainer\">\r\n            <div><span> <span style=\"text-align: left;\">Dear Sir,</span></span></div>\r\n            <div style=\"text-align: right;\">\r\n              <span style=\"text-align: left;\">We report on the following teas due for the above sale.</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>Lot No</th>\r\n              <th>Invoice</th>\r\n              <th>Grade</th>\r\n              <th>Pkgs</th>\r\n              <th>Price</th>\r\n              <th>Maximum Bid</th>\r\n              <th>LRating</th>\r\n              <th>LIRating</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            ${factoryData\r\n              .map(\r\n                (item) => `<tr key=${item.id}>\r\n                  <td>${item.lot}</td>\r\n                  <td>${item.invoice}</td>\r\n                  <td>${item.grade}</td>\r\n                  <td>${item.pkgs}</td>\r\n                  <td>${item.price}</td>\r\n                  <td>${item.maximum_bid !== 0 ? item.maximum_bid : ''}</td>\r\n                  <td>${item.lrating_name}</td>\r\n                  <td>${item.lirating_name}</td>\r\n                </tr>`\r\n              )\r\n              .join('')}\r\n          </tbody>\r\n          <tfoot>\r\n          <tr>\r\n            <td colspan=\"2\">Total :</td>\r\n            <td>${totalPkgs} Pkgs</td>\r\n            <td>${grossTotal} Kg</td>\r\n          \r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n      </div>\r\n    `;\r\n  };\r\n\r\n  return (\r\n       <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={handlePrintButtonClick}>\r\n  <span className=\"text-center mx-auto\">Tasting Report</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n  </button>\r\n  );\r\n};\r\n\r\nexport default TestingReport;\r\n","import React,{useState} from 'react';\r\nconst AuctionSummaryBuyer = ({ data ,user,saledetails}) => {\r\n\r\n  const [totalLeafPkgs, setTotalLeafPkgs] = useState(0);\r\n  const [totalLeafKg, setTotalLeafKg] = useState(0);\r\n  const [totalDustPkgs, setTotalDustPkgs] = useState(0);\r\n  const [totalDustKg, setTotalDustKg] = useState(0);\r\n  const [totalSupplementPkgs, setTotalSupplementPkgs] = useState(0);\r\n  const [totalSupplementKg, setTotalSupplementKg] = useState(0);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [totalAvgAmount, setTotalAvgAmount] = useState(0);\r\n\r\n  const groupAndCalculate = (data) => {\r\n    const result = {};\r\n\r\n    let totalLeafKg = 0;\r\n    let totalDustKg = 0;\r\n    let totalSupplementKg = 0;\r\n    let totalAmount = 0;\r\n    let totalAvgAmount = 0;\r\n\r\n    for (const item of data) {\r\n      console.log(item);\r\n      const {buyer_full_name ,buyer_name, category, totalkg, pkgs, gross_total, maximum_bid } = item;\r\nconsole.log(item);\r\n      if (!result[buyer_name]) {\r\n        result[buyer_full_name] = {\r\n          leaf: { pkgs: 0, kg: 0, amount: 0 },\r\n          dust: { pkgs: 0, kg: 0, amount: 0 },\r\n          supplement: { pkgs: 0, kg: 0, amount: 0 },\r\n          gross_total: 0,\r\n        };\r\n      }\r\n\r\n      switch (category) {\r\n        case 'LEAF':\r\n          result[buyer_full_name].leaf.pkgs += Number(pkgs);\r\n          result[buyer_full_name].leaf.kg += Number(gross_total);\r\n          result[buyer_full_name].leaf.amount += Number(maximum_bid * gross_total);\r\n          totalLeafKg += Number(gross_total);\r\n          break;\r\n        case 'DUST':\r\n          result[buyer_full_name].dust.pkgs += Number(pkgs);\r\n          result[buyer_full_name].dust.kg += Number(gross_total);\r\n          result[buyer_full_name].dust.amount += Number(maximum_bid * gross_total);\r\n          totalDustKg += Number(gross_total);\r\n          break;\r\n        case 'SUPPLEMENT':\r\n          result[buyer_full_name].supplement.pkgs += Number(pkgs);\r\n          result[buyer_full_name].supplement.kg += Number(gross_total);\r\n          result[buyer_full_name].supplement.amount += Number(maximum_bid * gross_total);\r\n          totalSupplementKg += Number(gross_total);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      result[buyer_full_name].gross_total += Number(gross_total);\r\n      totalAmount += Number(maximum_bid * gross_total);\r\n      totalAvgAmount += Number(maximum_bid);\r\n    }\r\n\r\n    setTotalLeafKg(totalLeafKg);\r\n    setTotalDustKg(totalDustKg);\r\n    setTotalSupplementKg(totalSupplementKg);\r\n    setTotalAmount(totalAmount);\r\n    setTotalAvgAmount(totalAvgAmount);\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    const groupedData = groupAndCalculate(data);\r\n\r\n    // Calculations for totals, similar to the previous implementation...\r\n    // You can directly calculate totals here without using useState and useEffect\r\n\r\n    const dataAsHtml = `\r\n    <table>\r\n    <thead>\r\n    <tr>\r\n      <th rowSpan=\"2\">Buyer Name</th>\r\n      <th colSpan=\"2\">Leaf</th>\r\n      <th colSpan=\"2\">Dust</th>\r\n      <th colSpan=\"2\">Supplement</th>\r\n      <th rowSpan=\"2\">Total Amount</th>\r\n      <th rowSpan=\"2\">Avg Amount</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Pkgs</th>\r\n      <th>Kg</th>\r\n      <th>Pkgs</th>\r\n      <th>Kg</th>\r\n      <th>Pkgs</th>\r\n      <th>Kg</th>\r\n    </tr>\r\n  </thead>\r\n      <tbody>\r\n        ${Object.keys(groupedData).map((buyer_full_name) => {\r\n          const { leaf, dust, supplement, gross_total } = groupedData[buyer_full_name];\r\n          const totalAmount = leaf.amount + dust.amount + supplement.amount;\r\n          const avgAmount = totalAmount / gross_total;\r\n\r\n          return `\r\n            <tr>\r\n              <td>${buyer_full_name}</td>\r\n              <td>${leaf.pkgs}</td>\r\n              <td>${leaf.kg}</td>\r\n              <td>${dust.pkgs}</td>\r\n              <td>${dust.kg}</td>\r\n              <td>${supplement.pkgs}</td>\r\n              <td>${supplement.kg}</td>\r\n              <td>${totalAmount.toFixed(2)}</td>\r\n              <td>${avgAmount.toFixed(2)}</td>\r\n            </tr>\r\n          `;\r\n        }).join('')}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td>Total</td>\r\n          <td>${totalLeafPkgs}</td>\r\n          <td>${totalLeafKg}</td>\r\n          <td>${totalDustPkgs}</td>\r\n          <td>${totalDustKg}</td>\r\n          <td>${totalSupplementPkgs}</td>\r\n          <td>${totalSupplementKg}</td>\r\n          <td>${totalAmount.toFixed(2)}</td>\r\n          <td>${totalAvgAmount.toFixed(2)}</td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  `;\r\n  const htmlContent = `\r\n  <html>\r\n  <head>\r\n    <title>Buyer Summary</title>\r\n    <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n    <style>\r\n      .table-wrapper {\r\n        margin: 0 auto;\r\n        width: 980px;\r\n        padding: 20px;\r\n        background-color: #ffffff;\r\n      }\r\n      body {\r\n        font-family: \"Courier New\", Courier, monospace;\r\n        color: #000;\r\n        background: #757677;\r\n        font-size: 12px;\r\n      }\r\n      .head {\r\n        padding: 0px 50px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n      }\r\n      table {\r\n        width: 940px;\r\n        margin: 0 auto;\r\n        border-collapse: collapse;\r\n      }\r\n      th,\r\n      td {\r\n        padding: 5px;\r\n        border: 1px solid black;\r\n        text-align: center;\r\n      }\r\n      th.align-right,\r\n      td.align-right {\r\n        text-align: right;\r\n      }\r\n      .total {\r\n        font-weight: bold;\r\n        color: purple;\r\n      }\r\n      .green-text {\r\n        font-weight: 400;\r\n        color: purple;\r\n      }\r\n      .red-text {\r\n        color: red;\r\n      }\r\n      .season {\r\n        display: flex;\r\n        align-items: space-between;\r\n        justify-content: center;\r\n      }\r\n      @media print {\r\n        body {\r\n          margin: 0;\r\n          font-size: 10px;\r\n        }\r\n        .table-wrapper {\r\n          page-break-inside: avoid;\r\n        }\r\n      }\r\n      .header {\r\n         \r\n        padding: 10px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    /* Icon in the first row */\r\n    .icon {\r\n        width: 60px;\r\n        height: 60px;\r\n           }\r\n\r\n    /* Span Container */\r\n    .span-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center; /* Center the container horizontally */\r\n    }\r\n\r\n    /* Individual Spans */\r\n    .span1, .span2, .span3 {\r\n        padding: 2px 10px;\r\n        text-align: center;\r\n    }\r\n\r\n    .span1 {\r\n        font-size: 26px;\r\n        font-weight:bold;\r\n    }\r\n\r\n    .span2, .span3 {\r\n        font-size: 14px;\r\n    }\r\n    </style>\r\n  </head>\r\n  <body>\r\n  <div class=\"table-wrapper\">\r\n  <div class=\"header\">\r\n  <!-- Icon in the first row -->\r\n  <div class=\"icon\">\r\n  <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n  </div>\r\n\r\n  <!-- Span Container -->\r\n  <div class=\"span-container\">\r\n      <span class=\"span1\">${user}</span>\r\n      <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n      <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n  </div>\r\n  <div></div>\r\n</div>\r\n      <hr>\r\n      ${dataAsHtml}\r\n    </div>\r\n   \r\n  </body>\r\n</html>\r\n`;\r\n  const newWindow = window.open();\r\n  newWindow.document.write(htmlContent);\r\n  newWindow.document.close();\r\n}\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\"\r\n      onClick={handleButtonClick}\r\n    >\r\n      <span className=\"text-center mx-auto\">Summary Buyer</span>\r\n      <span className=\"icon my-auto\">&#x1F512;</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AuctionSummaryBuyer;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst FactorywiseSummary = ({ data,user,saledetails }) => {\r\n  const factoryData = data.reduce((acc, item) => {\r\n    const factoryName = item.factory_name;\r\n    if (!acc[factoryName]) {\r\n      acc[factoryName] = {\r\n        offeredKg: 0,\r\n        soldKg: 0,\r\n        unsoldKg: 0,\r\n        totalTk: 0,\r\n        count: 0,\r\n      };\r\n    }\r\n\r\n    const grossTotal = parseFloat(item.gross_total);\r\n    acc[factoryName].offeredKg += grossTotal;\r\n    if (item.sold_status === 1) {\r\n      acc[factoryName].soldKg += grossTotal;\r\n      acc[factoryName].totalTk += grossTotal * parseFloat(item.maximum_bid);\r\n    } else {\r\n      acc[factoryName].unsoldKg += grossTotal;\r\n    }\r\n    acc[factoryName].count++;\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate total offered kilograms for each factory\r\n  Object.keys(factoryData).forEach((factoryName) => {\r\n    const factory = factoryData[factoryName];\r\n    factory.totalOfferedKg = factory.offeredKg ;\r\n  });\r\n\r\n  // Calculate average price for each factory\r\n  Object.keys(factoryData).forEach((factoryName) => {\r\n    const factory = factoryData[factoryName];\r\n    if (factory.soldKg > 0) {\r\n      factory.averagePrice = factory.totalTk / factory.soldKg;\r\n    } else {\r\n      factory.averagePrice = 0;\r\n    }\r\n  });\r\n\r\n  // Calculate Sold % for each factory\r\n  Object.keys(factoryData).forEach((factoryName) => {\r\n    const factory = factoryData[factoryName];\r\n    factory.soldPercentage = ((factory.soldKg / factory.totalOfferedKg) * 100).toFixed(2);\r\n  });\r\n\r\n  // ... (your existing code here)\r\n\r\n  const handleButtonClick = () => {\r\n    const dataAsHtml = `\r\n      <table>\r\n      <thead>\r\n      <tr>\r\n        <th rowSpan=\"2\">Factory Name</th>\r\n        <th colSpan=\"1\">Offered</th>\r\n        <th colSpan=\"2\">Sold</th>\r\n        <th rowSpan=\"1\">Unsold</th>\r\n        <th rowSpan=\"2\">Sold %</th>\r\n      </tr>\r\n      <tr>\r\n        <th>Kgs</th>\r\n        <th>Kgs</th>\r\n        <th>Avg. (Tk)</th>\r\n        <th>Kgs</th>\r\n      </tr>\r\n    </thead>\r\n        <tbody>\r\n          ${Object.keys(factoryData)\r\n            .map((factoryName) => {\r\n              const factory = factoryData[factoryName];\r\n              return `\r\n                <tr>\r\n                  <td>${factoryName}</td>\r\n                  <td>${factory.offeredKg.toFixed(2)}</td>\r\n                  <td>${factory.soldKg.toFixed(2)}</td>\r\n                  <td>${factory.averagePrice.toFixed(2)}</td>\r\n                  <td>${factory.unsoldKg.toFixed(2)}</td>\r\n                  <td>${factory.soldPercentage}%</td>\r\n                </tr>\r\n              `;\r\n            })\r\n            .join('')}\r\n        </tbody>\r\n        <tfoot>\r\n        <tr>\r\n          <td>Total</td>\r\n          <td>${Object.values(factoryData).reduce((acc, factory) => acc + factory.offeredKg, 0).toFixed(2)}</td>\r\n          <td>${Object.values(factoryData).reduce((acc, factory) => acc + factory.soldKg, 0).toFixed(2)}</td>\r\n          <td>${Object.values(factoryData).reduce((acc, factory) => acc + factory.averagePrice, 0).toFixed(2)}</td>\r\n          <td>${Object.values(factoryData).reduce((acc, factory) => acc + factory.unsoldKg, 0).toFixed(2)}</td>\r\n          <td></td>\r\n        </tr>\r\n      </tfoot>\r\n      </table>\r\n    `;\r\n    const htmlContent = `\r\n    <html>\r\n    <head>\r\n      <title>Generated Table</title>\r\n      <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 980px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n        }\r\n        body {\r\n          font-family: \"Courier New\", Courier, monospace;\r\n          color: #000;\r\n          background: #757677;\r\n          font-size: 12px;\r\n        }\r\n        .head {\r\n          padding: 0px 50px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        table {\r\n          width: 940px;\r\n          margin: 0 auto;\r\n          border-collapse: collapse;\r\n        }\r\n        th,\r\n        td {\r\n          padding: 5px;\r\n          border: 1px solid black;\r\n          text-align: center;\r\n        }\r\n        th.align-right,\r\n        td.align-right {\r\n          text-align: right;\r\n        }\r\n        .total {\r\n          font-weight: bold;\r\n          color: purple;\r\n        }\r\n        .green-text {\r\n          font-weight: 400;\r\n          color: purple;\r\n        }\r\n        .red-text {\r\n          color: red;\r\n        }\r\n        .season {\r\n          display: flex;\r\n          align-items: space-between;\r\n          justify-content: center;\r\n        }\r\n        @media print {\r\n          body {\r\n            margin: 0;\r\n            font-size: 10px;\r\n          }\r\n          .table-wrapper {\r\n            page-break-inside: avoid;\r\n          }\r\n        }\r\n        .header {\r\n         \r\n          padding: 10px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n\r\n      /* Icon in the first row */\r\n      .icon {\r\n          width: 60px;\r\n          height: 60px;\r\n             }\r\n\r\n      /* Span Container */\r\n      .span-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center; /* Center the container horizontally */\r\n      }\r\n\r\n      /* Individual Spans */\r\n      .span1, .span2, .span3 {\r\n          padding: 2px 10px;\r\n          text-align: center;\r\n      }\r\n\r\n      .span1 {\r\n          font-size: 26px;\r\n          font-weight:bold;\r\n      }\r\n\r\n      .span2, .span3 {\r\n          font-size: 14px;\r\n      }\r\n      </style>\r\n    </head>\r\n    <body>\r\n    <div class=\"table-wrapper\">\r\n    <div class=\"header\">\r\n    <!-- Icon in the first row -->\r\n    <div class=\"icon\">\r\n    <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n    </div>\r\n\r\n    <!-- Span Container -->\r\n    <div class=\"span-container\">\r\n        <span class=\"span1\">${user}</span>\r\n        <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n        <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n        <hr>\r\n        ${dataAsHtml}\r\n      </div>\r\n     \r\n    </body>\r\n  </html>\r\n  `;\r\n    const newWindow = window.open();\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\n  return (\r\n  <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={handleButtonClick}>  \r\n  <span className=\"text-center mx-auto\"> Factory Summary</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n  </button>\r\n  );\r\n};\r\n\r\nexport default FactorywiseSummary;\r\n","import React from 'react';\r\n\r\nconst FactorySold = ({ data,user,saledetails }) => {\r\n  // ... (same calculations as before)\r\n  const soldData = data.filter((item) => item.sold_status === 1);\r\n\r\n  // Calculate the total sold packages for each factory\r\n  const factorySoldPkgs = soldData.reduce((acc, item) => {\r\n    const factoryName = item.factory_name;\r\n    if (!acc[factoryName]) {\r\n      acc[factoryName] = 0;\r\n    }\r\n    acc[factoryName] += item.pkgs;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate the total sold kilograms for each factory\r\n  const factorySoldKg = soldData.reduce((acc, item) => {\r\n    const factoryName = item.factory_name;\r\n    if (!acc[factoryName]) {\r\n      acc[factoryName] = 0;\r\n    }\r\n    acc[factoryName] += parseFloat(item.gross_total);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate the total amount (gross_total * maximum_bid) for each factory\r\n  const factoryTotalAmount = soldData.reduce((acc, item) => {\r\n    const factoryName = item.factory_name;\r\n    if (!acc[factoryName]) {\r\n      acc[factoryName] = 0;\r\n    }\r\n    acc[factoryName] += parseFloat(item.gross_total) * parseFloat(item.maximum_bid);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Calculate the average price (total amount / gross_total) for each factory\r\n  const factoryAvgPrice = Object.keys(factoryTotalAmount).reduce((acc, factoryName) => {\r\n    acc[factoryName] = factoryTotalAmount[factoryName] / factorySoldKg[factoryName];\r\n    return acc;\r\n  }, {});\r\n  const handleButtonClick = () => {\r\n    const dataAsHtml = `\r\n      <h2 style=\"text-align: center;\">Factory Wise Sold Report</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Factory Name</th>\r\n            <th>Total Sold Packages</th>\r\n            <th>Total Sold Kg</th>\r\n            <th>Total Amount</th>\r\n            <th>Average Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${Object.keys(factorySoldPkgs)\r\n            .map((factoryName) => {\r\n              return `\r\n                <tr>\r\n                  <td>${factoryName}</td>\r\n                  <td>${factorySoldPkgs[factoryName]}</td>\r\n                  <td>${factorySoldKg[factoryName].toFixed(2)}</td>\r\n                  <td>${factoryTotalAmount[factoryName].toFixed(2)}</td>\r\n                  <td>${factoryAvgPrice[factoryName].toFixed(2)}</td>\r\n                </tr>\r\n              `;\r\n            })\r\n            .join('')}\r\n        </tbody>\r\n      </table>\r\n    `;\r\n    const htmlContent = `\r\n    <html>\r\n    <head>\r\n      <title>Factory Wise Sold</title>\r\n      <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n      <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 980px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n        }\r\n        body {\r\n          font-family: \"Courier New\", Courier, monospace;\r\n          color: #000;\r\n          background: #757677;\r\n          font-size: 12px;\r\n        }\r\n        .head {\r\n          padding: 0px 50px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        table {\r\n          width: 940px;\r\n          margin: 0 auto;\r\n          border-collapse: collapse;\r\n        }\r\n        th,\r\n        td {\r\n          padding: 5px;\r\n          border: 1px solid black;\r\n          text-align: center;\r\n        }\r\n        th.align-right,\r\n        td.align-right {\r\n          text-align: right;\r\n        }\r\n        .total {\r\n          font-weight: bold;\r\n          color: purple;\r\n        }\r\n        .green-text {\r\n          font-weight: 400;\r\n          color: purple;\r\n        }\r\n        .red-text {\r\n          color: red;\r\n        }\r\n        .season {\r\n          display: flex;\r\n          align-items: space-between;\r\n          justify-content: center;\r\n        }\r\n        @media print {\r\n          body {\r\n            margin: 0;\r\n            font-size: 10px;\r\n          }\r\n          .table-wrapper {\r\n            page-break-inside: avoid;\r\n          }\r\n        }\r\n        .header {\r\n         \r\n          padding: 10px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n\r\n      /* Icon in the first row */\r\n      .icon {\r\n          width: 60px;\r\n          height: 60px;\r\n             }\r\n\r\n      /* Span Container */\r\n      .span-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center; /* Center the container horizontally */\r\n      }\r\n\r\n      /* Individual Spans */\r\n      .span1, .span2, .span3 {\r\n          padding: 2px 10px;\r\n          text-align: center;\r\n      }\r\n\r\n      .span1 {\r\n          font-size: 26px;\r\n          font-weight:bold;\r\n      }\r\n\r\n      .span2, .span3 {\r\n          font-size: 14px;\r\n      }\r\n      </style>\r\n    </head>\r\n    <body>\r\n    <div class=\"table-wrapper\">\r\n    <div class=\"header\">\r\n    <!-- Icon in the first row -->\r\n    <div class=\"icon\">\r\n    <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n    </div>\r\n\r\n    <!-- Span Container -->\r\n    <div class=\"span-container\">\r\n        <span class=\"span1\">${user}</span>\r\n        <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n        <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n        <hr>\r\n        ${dataAsHtml}\r\n      </div>\r\n     \r\n    </body>\r\n  </html>\r\n    `;\r\n    const newWindow = window.open();\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\n  return (\r\n      <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={handleButtonClick}>\r\n      \r\n       <span className=\"text-center mx-auto\"> Factory Sold</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n      </button>\r\n  );\r\n};\r\n\r\nexport default FactorySold;\r\n","import React from 'react';\r\n\r\nconst BrokersSummary = ({ data ,user,saledetails}) => {\r\n  // Create a dictionary to store the data for each broker\r\n  const brokersData = {};\r\n\r\n  // Calculate the data for each broker\r\n  data.forEach((entry) => {\r\n    const { brokers_name, pkgs, sold_status, gross_total, maximum_bid } = entry;\r\n    if (sold_status === 1) {\r\n      brokersData[brokers_name] = {\r\n        totalLots: (brokersData[brokers_name]?.totalLots || 0) + pkgs,\r\n        soldLots: (brokersData[brokers_name]?.soldLots || 0) + (sold_status ? pkgs : 0),\r\n        offeredKg: (brokersData[brokers_name]?.offeredKg || 0) + parseFloat(gross_total),\r\n        soldKg: (brokersData[brokers_name]?.soldKg || 0) + (sold_status ? parseFloat(gross_total) : 0),\r\n        totalAmount: (brokersData[brokers_name]?.totalAmount || 0) + (sold_status ? parseFloat(gross_total) * maximum_bid : 0),\r\n        totalVAT: (brokersData[brokers_name]?.totalVAT || 0) + (sold_status ? parseFloat(gross_total) * maximum_bid * 0.15 : 0),\r\n      };\r\n    }\r\n  });\r\n\r\n  // Convert the data into HTML\r\n  const dataAsHtml = Object.keys(brokersData)\r\n    .map((brokerName) => {\r\n      const broker = brokersData[brokerName];\r\n      const soldPercentage = (broker.soldKg / broker.offeredKg) * 100;\r\n      return `\r\n        <tr>\r\n          <td>${brokerName}</td>\r\n          <td>${broker.totalLots}</td>\r\n          <td>${broker.soldLots}</td>\r\n          <td>${broker.offeredKg.toFixed(2)}</td>\r\n          <td>${broker.soldKg.toFixed(2)}</td>\r\n          <td>${broker.totalAmount.toFixed(2)}</td>\r\n          <td>${broker.totalVAT.toFixed(2)}</td>\r\n          <td>${soldPercentage.toFixed(2)}%</td>\r\n        </tr>\r\n      `;\r\n    })\r\n    .join('');\r\n\r\n  const handleButtonClick = () => {\r\n    const htmlContent = `\r\n    <html>\r\n    <head>\r\n      <title>Broker Summary</title>\r\n      <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n      <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 980px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n        }\r\n        body {\r\n          font-family: \"Courier New\", Courier, monospace;\r\n          color: #000;\r\n          background: #757677;\r\n          font-size: 12px;\r\n        }\r\n        .head {\r\n          padding: 0px 50px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        table {\r\n          width: 940px;\r\n          margin: 0 auto;\r\n          border-collapse: collapse;\r\n        }\r\n        th,\r\n        td {\r\n          padding: 5px;\r\n          border: 1px solid black;\r\n          text-align: center;\r\n        }\r\n        th.align-right,\r\n        td.align-right {\r\n          text-align: right;\r\n        }\r\n        .total {\r\n          font-weight: bold;\r\n          color: purple;\r\n        }\r\n        .green-text {\r\n          font-weight: 400;\r\n          color: purple;\r\n        }\r\n        .red-text {\r\n          color: red;\r\n        }\r\n        .season {\r\n          display: flex;\r\n          align-items: space-between;\r\n          justify-content: center;\r\n        }\r\n        @media print {\r\n          body {\r\n            margin: 0;\r\n            font-size: 10px;\r\n          }\r\n          .table-wrapper {\r\n            page-break-inside: avoid;\r\n          }\r\n        }\r\n        .header {\r\n         \r\n          padding: 10px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n\r\n      /* Icon in the first row */\r\n      .icon {\r\n          width: 60px;\r\n          height: 60px;\r\n             }\r\n\r\n      /* Span Container */\r\n      .span-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center; /* Center the container horizontally */\r\n      }\r\n\r\n      /* Individual Spans */\r\n      .span1, .span2, .span3 {\r\n          padding: 2px 10px;\r\n          text-align: center;\r\n      }\r\n\r\n      .span1 {\r\n          font-size: 26px;\r\n          font-weight:bold;\r\n      }\r\n\r\n      .span2, .span3 {\r\n          font-size: 14px;\r\n      }\r\n      </style>\r\n    </head>\r\n    <body>\r\n    <div class=\"table-wrapper\">\r\n    <div class=\"header\">\r\n    <!-- Icon in the first row -->\r\n    <div class=\"icon\">\r\n    <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n    </div>\r\n\r\n    <!-- Span Container -->\r\n    <div class=\"span-container\">\r\n        <span class=\"span1\">${user}</span>\r\n        <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n        <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n        <hr>  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Broker Name</th>\r\n        <th>Total Lots (pkgs)</th>\r\n        <th>Sold Lots (pkgs)</th>\r\n        <th>Offered KG</th>\r\n        <th>Sold KG</th>\r\n        <th>Total Amount</th>\r\n        <th>Total VAT</th>\r\n        <th>Sold%</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n        ${dataAsHtml}\r\n        </tbody>\r\n        <tfoot>\r\n            <tr>\r\n              <td class=\"total\">Total</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.totalLots, 0)}</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.soldLots, 0)}</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.offeredKg, 0).toFixed(2)}</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.soldKg, 0).toFixed(2)}</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.totalAmount, 0).toFixed(2)}</td>\r\n              <td class=\"total\">${Object.values(brokersData).reduce((acc, cur) => acc + cur.totalVAT, 0).toFixed(2)}</td>\r\n              <td class=\"total\"></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n     \r\n    </body>\r\n  </html>\r\n    `;\r\n\r\n    const newWindow = window.open();\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\n  return (\r\n    \r\n      <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\" onClick={handleButtonClick}>\r\n        <span className=\"text-center mx-auto\">Brokers Summary</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n      </button>\r\n    \r\n  );\r\n};\r\n\r\nexport default BrokersSummary;\r\n","import React from 'react';\r\n\r\nconst BiddersoldReport = ({ data,user,saledetails }) => {\r\n  console.log(data);\r\n  // Filter data where sold_status is 1\r\n  const filteredData = data.filter((entry) => entry.sold_status === 1);\r\n// console.log(filteredData);\r\n  // Calculate total amount, VAT, and average for each entry\r\n  const reportData = filteredData.map((entry) => {\r\n    const {brokers_name,  lot, invoice, factory_name, warehouse_name, pkgs, gross_total, maximum_bid } = entry;\r\n    const amount = parseFloat(gross_total) * maximum_bid;\r\n    const vat = amount * 0.15;\r\n    const average = amount / parseFloat(gross_total);\r\n    return {\r\n      lot,\r\n      invoice,\r\n      factory_name,\r\n      warehouse_name,\r\n      pkgs,\r\n      brokers_name, \r\n      gross_total: parseFloat(gross_total).toFixed(2),\r\n      amount: amount.toFixed(2),\r\n      total: (amount + vat).toFixed(2),\r\n      avg: average.toFixed(2),\r\n      vat: vat.toFixed(2),\r\n    };\r\n  });\r\n\r\n  // Calculate the total amounts for each column\r\n  const totalPkgs = reportData.reduce((total, entry) => total + parseInt(entry.pkgs), 0);\r\n  const totalAmount = reportData.reduce((total, entry) => total + parseFloat(entry.amount), 0);\r\n  const totalTotal = reportData.reduce((total, entry) => total + parseFloat(entry.total), 0);\r\n  const totalAvg = (totalTotal / filteredData.length).toFixed(2);\r\n  const totalVat = reportData.reduce((total, entry) => total + parseFloat(entry.vat), 0);\r\n// Helper functions to calculate the totals for a specific broker\r\nconst totalPkgsForBroker = (brokerName) => {\r\n  return reportData\r\n    .filter((entry) => entry.brokers_name === brokerName)\r\n    .reduce((total, entry) => total + parseInt(entry.pkgs), 0);\r\n};\r\n\r\nconst totalAmountForBroker = (brokerName) => {\r\n  return reportData\r\n    .filter((entry) => entry.brokers_name === brokerName)\r\n    .reduce((total, entry) => total + parseFloat(entry.amount), 0);\r\n};\r\n\r\nconst totalTotalForBroker = (brokerName) => {\r\n  return reportData\r\n    .filter((entry) => entry.brokers_name === brokerName)\r\n    .reduce((total, entry) => total + parseFloat(entry.total), 0);\r\n};\r\n\r\nconst totalVatForBroker = (brokerName) => {\r\n  return reportData\r\n    .filter((entry) => entry.brokers_name === brokerName)\r\n    .reduce((total, entry) => total + parseFloat(entry.vat), 0);\r\n};\r\n  // Convert the report data into HTML\r\n  const reportAsHtml = reportData\r\n    .map((entry,index) => {\r\n      return `\r\n        <tr>\r\n          <td>${entry.lot}</td>\r\n          <td>${entry.invoice}</td>\r\n          <td style=\"text-align: left;\">${entry.brokers_name}</td>\r\n          <td style=\"text-align: left;\">${entry.factory_name}</td>\r\n          <td style=\"text-align: left;\">${entry.warehouse_name}</td>\r\n          <td style=\"text-align: right;\">${entry.pkgs}</td>\r\n          <td style=\"text-align: right;\">${entry.gross_total}</td>\r\n          <td style=\"text-align: right;\">${entry.avg}</td>\r\n          <td style=\"text-align: right;\">${entry.amount}</td>\r\n          <td style=\"text-align: right;\">${entry.vat}</td>\r\n          <td style=\"text-align: right;\">${entry.total}</td>\r\n        </tr>\r\n        ${index === reportData.length - 1 || reportData[index + 1].brokers_name !== entry.brokers_name ? `\r\n        <tr>\r\n          <td colspan=\"5\" style=\"text-align: right;\">Sub Total:</td>\r\n          <td style=\"text-align: right;\">${totalPkgsForBroker(entry.brokers_name)}</td>\r\n          <td></td>\r\n          <td></td>\r\n          <td style=\"text-align: right;\">${totalAmountForBroker(entry.brokers_name).toFixed(2)}</td>\r\n          <td style=\"text-align: right;\">${totalVatForBroker(entry.brokers_name).toFixed(2)}</td>\r\n          <td style=\"text-align: right;\">${totalTotalForBroker(entry.brokers_name).toFixed(2)}</td>\r\n        \r\n         \r\n        </tr>\r\n      ` : ''}\r\n      `;\r\n    })\r\n    .join('');\r\n\r\n  const handleButtonClick = () => {\r\n   \r\n    const htmlContent = `\r\n    <html>\r\n    <head>\r\n      <title>Bidder Report</title>\r\n      <link rel=\"icon\"  type=\"image/png\" href=\"/ttab.png\" />\r\n      <style>\r\n        .table-wrapper {\r\n          margin: 0 auto;\r\n          width: 1250px;\r\n          padding: 20px;\r\n          background-color: #ffffff;\r\n        }\r\n        body {\r\n          font-family: \"Courier New\", Courier, monospace;\r\n          color: #000;\r\n          background: #757677;\r\n          font-size: 12px;\r\n        }\r\n        .head {\r\n          padding: 0px 50px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        table {\r\n          width: 1200px;\r\n          margin: 0 auto;\r\n          border-collapse: collapse;\r\n        }\r\n        th,\r\n        td {\r\n          padding: 5px;\r\n          border: 1px solid black;\r\n          text-align: center;\r\n        }\r\n        th.align-right,\r\n        td.align-right {\r\n          text-align: right;\r\n        }\r\n        .total {\r\n          font-weight: bold;\r\n          color: purple;\r\n        }\r\n        .green-text {\r\n          font-weight: 400;\r\n          color: purple;\r\n        }\r\n        .red-text {\r\n          color: red;\r\n        }\r\n        .season {\r\n          display: flex;\r\n          align-items: space-between;\r\n          justify-content: center;\r\n        }\r\n        @media print {\r\n          body {\r\n            margin: 0;\r\n            font-size: 10px;\r\n          }\r\n          .table-wrapper {\r\n            page-break-inside: avoid;\r\n          }\r\n        }    .header {\r\n         \r\n          padding: 10px;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n      }\r\n\r\n      /* Icon in the first row */\r\n      .icon {\r\n          width: 60px;\r\n          height: 60px;\r\n             }\r\n\r\n      /* Span Container */\r\n      .span-container {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center; /* Center the container horizontally */\r\n      }\r\n\r\n      /* Individual Spans */\r\n      .span1, .span2, .span3 {\r\n          padding: 2px 10px;\r\n          text-align: center;\r\n      }\r\n\r\n      .span1 {\r\n          font-size: 26px;\r\n          font-weight:bold;\r\n      }\r\n\r\n      .span2, .span3 {\r\n          font-size: 14px;\r\n      }\r\n      </style>\r\n    </head>\r\n    <body>\r\n    <div class=\"table-wrapper\">\r\n    <div class=\"header\">\r\n    <!-- Icon in the first row -->\r\n    <div class=\"icon\">\r\n    <img class=\"icon\" src=\"/ttab.png\" alt=\"Icon Image\" />\r\n    </div>\r\n\r\n    <!-- Span Container -->\r\n    <div class=\"span-container\">\r\n        <span class=\"span1\">${user.name}</span>\r\n        <span class=\"span2\">Season :${saledetails[0].season}</span>\r\n        <span class=\"span3\">Sale No : ${saledetails[0].sale_no}</span>\r\n    </div>\r\n    <div></div>\r\n</div>\r\n        <hr>\r\n    <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Lot No</th>\r\n        <th>Invoice No</th>\r\n        <th>Broker Name</th>\r\n        <th>Factory Name</th>\r\n        <th>Warehouse Name</th>\r\n        <th>Pkgs</th>\r\n        <th>Gross Total</th>\r\n      \r\n        <th>Average</th>\r\n        <th>Amount</th>\r\n        <th>VAT 15%</th>\r\n        <th>Total (Amount + VAT)</th>\r\n       \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      ${reportAsHtml}\r\n    </tbody>\r\n    <tfoot>\r\n      <tr>\r\n        <td colspan=\"5\" style=\"text-align: right;font-weight:bold;\">Grand Total:</td>\r\n        <td style=\"text-align: right;font-weight:bold;\"> ${totalPkgs}</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td  style=\"text-align: right;font-weight:bold;\">${totalAmount.toFixed(2)}</td>\r\n        <td  style=\"text-align: right;font-weight:bold;\">${totalVat.toFixed(2)}</td>\r\n        <td  style=\"text-align: right;font-weight:bold;\">${totalTotal.toFixed(2)}</td>\r\n      \r\n      </tr>\r\n    </tfoot>\r\n  </table>\r\n      </div>\r\n     \r\n    </body>\r\n  </html>\r\n    `;\r\n\r\n    const newWindow = window.open();\r\n    newWindow.document.write(htmlContent);\r\n    newWindow.document.close();\r\n  };\r\n\r\n  return (\r\n  \r\n      <button className=\"btn btn-primary w-100 text-center mb-2 d-flex justify-content-between align-items-center\"  onClick={handleButtonClick}>\r\n       \r\n        <span className=\"text-center mx-auto\">Bidder Report</span>\r\n  <span className=\"icon my-auto\">&#x1F512;</span>\r\n      </button>\r\n    \r\n  );\r\n};\r\n\r\nexport default BiddersoldReport;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport OpenHTMLButton from \"../components/Report/OpenHTMLButton\";\r\nimport CatalogueList from \"../components/Report/CatalougueList\";\r\nimport AuctionReport from \"../components/Report/AuctionReport\";\r\nimport SoldReport from \"../components/Report/SoldReport\";\r\nimport ValuationReport from \"../components/Report/ValuationReport\";\r\nimport InvoiceGenerate from \"../components/Report/InvoiceGenerate\";\r\nimport TestingReport from \"../components/Report/TestingReport\";\r\nimport AuctionSummaryBuyer from \"../components/Report/AuctionSummaryBuyer\";\r\nimport FactorywiseSummary from \"../components/Report/FactorywiseSummary\";\r\nimport FactorySold from \"../components/Report/FactorySold\";\r\nimport BrokersSummary from \"../components/Report/BrokersSummary\";\r\nimport BiddersoldReport from \"../components/Report/BiddersoldReport\";\r\nimport { getReportdata, getAllfactory,getAllsaleno } from \"../store/catalogueSlice\";\r\n\r\nconst ReportAll = () => {\r\n  const dispatch = useDispatch();\r\n  const usersString = localStorage.getItem(\"users\");\r\n  const users = JSON.parse(usersString);\r\n  const [selectedBrokers, setSelectedBrokers] = useState(\"\");\r\n  const [selectSell, setSelectSell] = useState(0);\r\n  const [selectedBrokersname, setSelectedBrokersname] = useState(\"\");\r\n  const [selectedDataArray, setSelectedDataArray] = useState([]);\r\nconst [type, setType] = useState('');\r\n  const { factory_list, edit, report_list,sale_list } = useSelector(\r\n    (state) => state.catalogue\r\n  );\r\n// console.log(users);\r\n  const catList = useMemo(() => {\r\n    return report_list\r\n      .filter(\r\n        (item) =>\r\n          item.brokers === Number(selectedBrokers) &&\r\n          item.sale_no === Number(selectSell)\r\n      )\r\n      .filter(\r\n        (item) =>\r\n          new Date(item.timestamp).getFullYear() === new Date().getFullYear()\r\n      )\r\n      .sort((a, b) => a.id - b.id);\r\n  }, [report_list, selectedBrokers, selectSell]);\r\n  // console.log(catList);\r\n\r\n  const soldList = useMemo(() => {\r\n    return catList\r\n      .filter((item) => item.sold_status === 1)\r\n      .sort((a, b) => a.id - b.id);\r\n  }, [catList]);\r\n  \r\n  const bidderReportdata = useMemo(() => {\r\n    return report_list\r\n      .filter((item) => item.buyer === users.link_id)\r\n      .sort((a, b) => a.id - b.id);\r\n  }, [report_list]);\r\n  //soldstatus\r\n  const sortedData5 = useMemo(\r\n    () => [...soldList].sort((a, b) => a.id - b.id),\r\n    [soldList]\r\n  );\r\n\r\n  const sortedData6 = useMemo(\r\n    () =>\r\n      [...sortedData5].sort((a, b) => {\r\n        if (a.factory_name.toLowerCase() < b.factory_name.toLowerCase())\r\n          return -1;\r\n        if (a.factory_name.toLowerCase() > b.factory_name.toLowerCase())\r\n          return 1;\r\n        return b.id - a.id;\r\n      }),\r\n    [sortedData5]\r\n  );\r\n \r\n  const sortedData = useMemo(\r\n    () => [...catList].sort((a, b) => a.id - b.id),\r\n    [catList]\r\n  );\r\n\r\n  const sortedData2 = useMemo(\r\n    () =>\r\n      [...sortedData].sort((a, b) => {\r\n        if (a.factory_name.toLowerCase() < b.factory_name.toLowerCase())\r\n          return -1;\r\n        if (a.factory_name.toLowerCase() > b.factory_name.toLowerCase())\r\n          return 1;\r\n        return b.id - a.id;\r\n      }),\r\n    [sortedData]\r\n  );\r\n\r\n  const sortedData3 = useMemo(\r\n    () =>\r\n      [...catList].sort((a, b) => {\r\n        if (a.factory_name.toLowerCase() < b.factory_name.toLowerCase())\r\n          return -1;\r\n        if (a.factory_name.toLowerCase() > b.factory_name.toLowerCase())\r\n          return 1;\r\n        return b.id - a.id;\r\n      }),\r\n    [catList]\r\n  );\r\n  const brokers = factory_list.filter((factory) => factory.type === \"BROKERS\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setSelectSell(e.target.value);\r\n    const selectedData = sale_list.find((item) => item.sale_no === Number(e.target.value));\r\n\r\n    // Update the selectedDataArray state with the selected data object\r\n    setSelectedDataArray([selectedData]);\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedBrokers(e.target.value);\r\n    const selectedOption = brokers.filter(\r\n      (shead) => shead.id === Number(e.target.value)\r\n    );\r\n    // console.log(selectedOption[0].name);\r\n    setSelectedBrokersname(selectedOption[0].name);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getReportdata());\r\n    dispatch(getAllfactory());\r\n    dispatch(getAllsaleno());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n setType(users.type)\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"content\">\r\n        <section className=\"col-lg-12 connectedSortable mt-1\">\r\n          <div className=\"box box-primary\">\r\n            <div className=\"box-header header-custom\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 text-left\">\r\n                  <h3 className=\"box-title\">{type} REPORT</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                \r\n                <div className=\"col-6 col-md-6\">\r\n                <div className=\"col-12 mb-2 col-md-12 d-flex flex-column align-items-center justify-content-center\">\r\n                  <select\r\n       className=\"form-control\"\r\n       value={selectSell}\r\n       onChange={handleInputChange}\r\n      >\r\n          <option value=\"\"> -- Select Sale -- </option>\r\n        {sale_list.map((item) => (\r\n          <option key={item.sale_no} value={item.sale_no}>\r\n            {`Sale No : `+ item.sale_no +`(`+item.season+`)`}\r\n          </option>\r\n        ))}\r\n      </select>\r\n                 \r\n                   \r\n                  </div>\r\n                  {type==='BROKERS'?(\r\n                    \r\n                    <div className=\"col-12 col-md-12 d-flex flex-column align-items-center justify-content-center\">\r\n                    <select\r\n                      required\r\n                      value={selectedBrokers}\r\n                      onChange={handleSelectChange}\r\n                      name=\"factory\"\r\n                      autoComplete=\"off\"\r\n                      id=\"factory\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\"> -- Select Brokers -- </option>\r\n\r\n                      {brokers.map((shead) => (\r\n                        <option key={shead.id} value={shead.id}>\r\n                          {shead.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                    ):('')}\r\n                 \r\n                 \r\n                </div>\r\n\r\n                <div className=\"col-6 col-md-6 d-flex flex-column align-items-center justify-content-center\">\r\n               {type==='BROKERS'?(\r\n                <>\r\n                <CatalogueList\r\n                    data={sortedData3}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  <AuctionReport\r\n                    data={sortedData2}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                       <SoldReport data={sortedData6} user={selectedBrokersname}   saledetails={selectedDataArray}/>\r\n                 \r\n                  <OpenHTMLButton data={catList} user={selectedBrokersname}  saledetails={selectedDataArray} />\r\n                 \r\n                  <ValuationReport data={catList} user={selectedBrokersname}  saledetails={selectedDataArray}/>\r\n                  <TestingReport data={catList} user={selectedBrokersname}  saledetails={selectedDataArray} />\r\n             \r\n                  <AuctionSummaryBuyer\r\n                    data={sortedData6}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  <FactorywiseSummary\r\n                    data={catList}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  <FactorySold data={catList} user={selectedBrokersname}  saledetails={selectedDataArray}/>\r\n                  <InvoiceGenerate\r\n                    sqlData={sortedData6}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  <BrokersSummary\r\n                    data={report_list}\r\n                    user={selectedBrokersname}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  \r\n                  </>):(\r\n<BiddersoldReport\r\n                    data={bidderReportdata}\r\n                    user={users}\r\n                    saledetails={selectedDataArray}\r\n                  />\r\n                  )}\r\n               \r\n                  \r\n\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportAll;\r\n","import \"./App.css\";\r\nimport SideMenu from \"./components/SideMenu\";\r\nimport React, { useState, lazy, Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes,useLocation } from \"react-router-dom\";\r\nimport ReportAll from \"./pages/ReportAll\";\r\nconst Dashboard = lazy(() => import(\"./pages/Dashboard\"));\r\nconst Login = lazy(() => import(\"./pages/login/Login\"));\r\nconst Catalogue = lazy(() => import(\"./pages/Catalogue\"));\r\nconst Bidders = lazy(() => import(\"./pages/Bidders\"));\r\nconst Auction = lazy(() => import(\"./pages/Auction\"));\r\nconst Association = lazy(() => import(\"./pages/auction/Association\"));\r\nconst DemoCard = lazy(() => import(\"./pages/auction/DemoCard\"));\r\nconst UnsoldItem = lazy(() => import(\"./pages/UnsoldItem\"));\r\nconst Profile = lazy(() => import(\"./pages/profile/Profile\"));\r\nconst ChangePassword = lazy(() => import(\"./pages/profile/ChangePassword\"));\r\nconst CountDown = lazy(() => import(\"./pages/auction/Countdown\"));\r\nconst Signup = lazy(() => import(\"./pages/login/Signup\"));\r\n\r\n\r\n// const API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  const showSidebar = location.pathname !== '/';\r\n  const [inactive, setInactive] = useState(true);\r\n  return (\r\n    <div className=\"\">\r\n         {showSidebar &&    <SideMenu\r\n          onCollapse={(inactive) => {\r\n            setInactive(inactive);\r\n          }}\r\n        />}\r\n     \r\n\r\n        <div className={` ${showSidebar ? (inactive?\"container2 inactive\":\"container2\") : \"sidebars\"}`} >\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n       \r\n            <Routes>\r\n            <Route exact path=\"/\" element={<Login />} />\r\n            <Route path=\"/association\"  element={\r\n               <Association />\r\n            } />\r\n              <Route path=\"/democard\"  element={\r\n               <DemoCard />\r\n            } />\r\n            <Route path=\"/dashboard\"  element={\r\n               <Dashboard />\r\n            } />\r\n            <Route path=\"/catalogue\"  element={\r\n               <Catalogue />\r\n            } />\r\n            <Route path=\"/bidders\" element={\r\n             <Bidders />\r\n            } />\r\n            <Route path=\"/auction\"  element={\r\n             <Auction />\r\n            } />\r\n               <Route path=\"/unsold\"  element={\r\n             <UnsoldItem />\r\n            } />\r\n             <Route path=\"/reportall\"  element={\r\n             <ReportAll />\r\n            } />\r\n                <Route path=\"/profile\"  element={\r\n             <Profile />\r\n            } />\r\n              <Route path=\"/signupuser\"  element={\r\n             <Signup />\r\n            } />\r\n              <Route path=\"/changepassword\"  element={\r\n             <ChangePassword />\r\n            } />\r\n             <Route path=\"/countdown\"  element={\r\n             <CountDown />\r\n            } />\r\n            </Routes>\r\n        \r\n          \r\n            \r\n         \r\n        </Suspense>\r\n      </div>\r\n\r\n      {showSidebar? (\r\n        <>\r\n        <div className={`main-footer ${inactive  ? \"m-inactive\" : \"\"}`}>\r\n          <strong>\r\n            Copyright © 2023-2024 \r\n            <a href=\"\"> It Tech Point BD</a>.\r\n          </strong>\r\n          All rights reserved.\r\n        </div>\r\n        </>\r\n      ):('')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  catalouge: [],\r\n  account_list: [],\r\n  alldata_list: [],\r\n  alltran_list: [],\r\n  side_list: [],\r\n  lc_list: [],\r\n  lc_product: [],\r\n  lc_sellvehicle:[],\r\n  status: \"idle\",\r\n  error: false,\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const getCatalouge = createAsyncThunk(\"getcatalouge\", async () => {\r\n  const response = await axios.get(`${API_URL}/catalouge`);\r\n  return response.data;\r\n});\r\n\r\n\r\n\r\nexport const getAccounts = createAsyncThunk(\"getdata\", async () => {\r\n  const response = await axios.get(`${API_URL}/accounts`);\r\n  return response.data;\r\n});\r\n\r\nexport const getAllsell = createAsyncThunk(\"getselldata\", async () => {\r\n  const response = await axios.get(`${API_URL}/allselldata`);\r\n  return response.data;\r\n});\r\nexport const getAlltran = createAsyncThunk(\"gettrandata\", async () => {\r\n  const response = await axios.get(`${API_URL}/accounts`);\r\n  return response.data;\r\n});\r\nexport const getAllside = createAsyncThunk(\"getside\", async () => {\r\n  const response = await axios.get(`${API_URL}/sidelist`);\r\n  return response.data;\r\n});\r\nexport const getAlllc = createAsyncThunk(\"getlc\", async () => {\r\n  const response = await axios.get(`${API_URL}/lc`);\r\n  return response.data;\r\n});\r\n\r\nexport const getLcproduct = createAsyncThunk(\"getlcproduct\", async () => {\r\n  const response = await axios.get(`${API_URL}/goods`);\r\n  return response.data;\r\n});\r\n\r\nexport const getLcsellvehicle= createAsyncThunk(\"getlcsellv\", async () => {\r\n  const response = await axios.get(`${API_URL}/getlcpurv`);\r\n  return response.data;\r\n});\r\n\r\n\r\n\r\nconst getDataSlice = createSlice({\r\n  name: \"getdata\",\r\n  initialState,\r\n  extraReducers: {\r\n    [getCatalouge.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.catalouge = payload;\r\n      state.error = false;\r\n    },\r\n    [getAccounts.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.account_list = payload;\r\n      state.error = false;\r\n    },\r\n    [getAllsell.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.alldata_list = payload;\r\n      state.error = false;\r\n    },\r\n    [getAllside.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.side_list = payload;\r\n      state.error = false;\r\n    },\r\n    [getAlllc.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.lc_list = payload;\r\n      state.error = false;\r\n    },\r\n    [getLcproduct.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.lc_product = payload;\r\n      state.error = false;\r\n    },\r\n    [getLcsellvehicle.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.lc_sellvehicle = payload;\r\n      state.error = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {} = getDataSlice.actions;\r\nconst getdataReducer = getDataSlice.reducer;\r\n\r\nexport default getdataReducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  auction_data: [],\r\n  accounts_data: [],\r\n  catalouge: [],\r\n  status: \"idle\",\r\n  error: false,\r\n  edit:false,\r\n  refresh:false,\r\n};\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\nexport const getCatalouge = createAsyncThunk(\"auc/getcatalouge\", async () => {\r\n  // console.log('ksdjkj');\r\n  const response = await axios.get(`${API_URL}/catalouge`);\r\n  return response.data;\r\n\r\n});\r\n\r\nexport const addManualbid = createAsyncThunk(\"auc/manualbid\", async (props) => {\r\n  const response = await axios.put(`${API_URL}/manualbid`, {\r\n   data:props\r\n  });\r\n  return response.data;\r\n});\r\n\r\nexport const saveData = createAsyncThunk(\"auc/create\", async (accounts) => {\r\n  const response = await axios.post(`${API_URL}/create`, {\r\n    adata: accounts\r\n  });\r\n  return response.data;\r\n});\r\n\r\nexport const updateData = createAsyncThunk(\"auc/updatedata\", async (data) => {\r\n//  console.log(lcpCart);\r\n  const response = await axios.put(`${API_URL}/updateauction`, {\r\n    adata: data,\r\n  });\r\n  return response.data;\r\n});\r\n\r\nexport const selectData = createAsyncThunk(\"auc/selectdata\", async (props) => {\r\n  const response= await axios.put(`${API_URL}/selectacccount`,{\r\n    id: props,\r\n  });\r\n    return response.data;\r\n  });\r\n  export const deleteData = createAsyncThunk(\"auc/deletedata\", async (props) => {\r\n \r\n    const response =axios.put(`${API_URL}/deleteaccount`,{\r\n      id: props,\r\n    })\r\n    return response.data;\r\n      \r\n    });\r\n \r\n    export const getAuctiondetails = createAsyncThunk(\"auctiondetails\", async () => {\r\n      const response = await axios.get(`${API_URL}/auctiondetails`);\r\n      return response.data;\r\n      \r\n    });\r\n    \r\nconst auctionSlice = createSlice({\r\n  name: \"auction\",\r\n  initialState,\r\n  reducers:{\r\n    increament: (state, action) => {\r\n      const item = state.catalouge.find((item) => item.id === action.payload);\r\n      item.maximum_bid++;\r\n      const response =  axios.put(`${API_URL}/updateauction`, {\r\n        adata: item,\r\n      });\r\n      return response.data;\r\n    },\r\n    dec: (state, action) => {\r\n      const { payload } = action;\r\n      state.catalouge = payload;\r\n    },\r\n  },\r\n \r\n\r\n  extraReducers: {\r\n    [getAuctiondetails.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n    [getAuctiondetails.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.auction_data = payload;\r\n      state.error = false;\r\n    },\r\n    [getCatalouge.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n      state.loading = false;\r\n      state.catalouge = payload;\r\n      state.error = false;\r\n    },\r\n    [saveData.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n    [saveData.fulfilled]: (state, action) => {\r\n      const { payload } = action;\r\n    },\r\n    [saveData.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [updateData.pending]: (state, action) => {\r\n      state.loading = true;\r\n      state.error = false;\r\n    },\r\n    [updateData.fulfilled]: (state) => {\r\n      state.edit=false;\r\n    },\r\n    [updateData.rejected]: (state) => {\r\n      state.error = true;\r\n    },\r\n    [selectData.fulfilled]: (state,action) => {\r\n      const { payload } = action;\r\n      state.accounts_data = payload;\r\n      state.edit=true;\r\n    },\r\n    [deleteData.pending]: (state) => {\r\n      state.refresh=false;\r\n    },\r\n    [deleteData.fulfilled]: (state) => {\r\n      state.refresh=true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {increament,dec} = auctionSlice.actions;\r\nconst auctionReducer = auctionSlice.reducer;\r\n\r\nexport default auctionReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport loginReducer from \"./loginSlice\";\r\nimport getdataReducer from \"./getDataSlice\";\r\n\r\nimport auctionReducer from \"./auctionSlice\";\r\nimport catalogueReducer from \"./catalogueSlice\";\r\nconst store = configureStore({\r\n  reducer: {\r\n    login: loginReducer,\r\n    getdata:getdataReducer,\r\n    auction: auctionReducer,\r\n    catalogue:catalogueReducer\r\n  }\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router, Switch, Route , useLocation} from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n// import 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n// import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n// import 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\n// import 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <Router>\r\n      <Provider store={store}>\r\n        \r\n    <App />\r\n    </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}